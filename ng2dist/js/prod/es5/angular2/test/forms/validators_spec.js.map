{"version":3,"sources":["@traceur/generated/TemplateParser/22","angular2/test/forms/validators_spec.js","angular2/test/forms/@traceur/generated/TemplateParser/10","angular2/test/forms/@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"angular2/test/forms/validators_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, el} from 'angular2/test_lib';\nimport {ControlGroup, Control, required, compose, controlGroupValidator, nullValidator} from 'angular2/forms';\n\nexport function main() {\n  function validator(key:string, error:any){\n    return function(c:Control) {\n      var r = {};\n      r[key] = error;\n      return r;\n    }\n  }\n\n  describe(\"Validators\", () => {\n    describe(\"required\", () => {\n      it(\"should error on an empty string\", () => {\n        expect(required(new Control(\"\"))).toEqual({\"required\" : true});\n      });\n\n      it(\"should error on null\", () => {\n        expect(required(new Control(null))).toEqual({\"required\" : true});\n      });\n\n      it(\"should not error on a non-empty string\", () => {\n        expect(required(new Control(\"not empty\"))).toEqual(null);\n      });\n    });\n\n    describe(\"compose\", () => {\n      it(\"should collect errors from all the validators\", () => {\n        var c = compose([validator(\"a\", true), validator(\"b\", true)]);\n        expect(c(new Control(\"\"))).toEqual({\"a\" : true, \"b\" : true});\n      });\n\n      it(\"should run validators left to right\", () => {\n        var c = compose([validator(\"a\", 1), validator(\"a\", 2)]);\n        expect(c(new Control(\"\"))).toEqual({\"a\" : 2});\n      });\n\n      it(\"should return null when no errors\", () => {\n        var c = compose([nullValidator, nullValidator]);\n        expect(c(new Control(\"\"))).toEqual(null);\n      });\n    });\n\n    describe(\"controlGroupValidator\", () => {\n      it(\"should collect errors from the child controls\", () => {\n        var one = new Control(\"one\", validator(\"a\", true));\n        var two = new Control(\"one\", validator(\"b\", true));\n        var g = new ControlGroup({\"one\" : one, \"two\" : two});\n\n        expect(controlGroupValidator(g)).toEqual({\n          \"a\" : [one],\n          \"b\" : [two]\n        });\n      });\n\n      it(\"should not include controls that have no errors\", () => {\n        var one = new Control(\"one\", validator(\"a\", true));\n        var two = new Control(\"two\");\n        var g = new ControlGroup({\"one\" : one, \"two\" : two});\n\n        expect(controlGroupValidator(g)).toEqual({\n          \"a\": [one]\n        });\n      });\n\n      it(\"should return null when no errors\", () => {\n        var g = new ControlGroup({\n          \"one\" : new Control(\"one\")\n        });\n\n        expect(controlGroupValidator(g)).toEqual(null);\n      });\n    });\n  });\n}","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;"]}