{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/test/metric/multi_metric_spec.js","@traceur/generated/TemplateParser/30","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","benchpress/test/metric/@traceur/generated/TemplateParser/10","benchpress/test/metric/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"benchpress/test/metric/multi_metric_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport { List, ListWrapper, StringMap } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\n\nimport { Metric, MultiMetric, bind, Injector } from 'benchpress/common';\n\nexport function main() {\n  function createMetric(ids) {\n    return new Injector([\n      ListWrapper.map(ids, (id) => bind(id).toValue(new MockMetric(id)) ),\n      MultiMetric.createBindings(ids)\n    ]).asyncGet(MultiMetric);\n  }\n\n  describe('multi metric', () => {\n\n    it('should merge descriptions', (done) => {\n      createMetric(['m1', 'm2']).then( (m) => {\n        expect(m.describe()).toEqual({\n          'm1': 'describe', 'm2': 'describe'\n        });\n        done();\n      });\n    });\n\n    it('should merge all beginMeasure calls', (done) => {\n      createMetric(['m1', 'm2'])\n        .then( (m) => m.beginMeasure() )\n        .then( (values) => {\n          expect(values).toEqual([\n            'm1_beginMeasure', 'm2_beginMeasure'\n          ]);\n          done();\n        });\n    });\n\n    [false, true].forEach( (restartFlag) => {\n      it(`should merge all endMeasure calls for restart=${restartFlag}`, (done) => {\n        createMetric(['m1', 'm2'])\n          .then( (m) => m.endMeasure(restartFlag) )\n          .then( (values) => {\n            expect(values).toEqual({\n              'm1': { 'restart': restartFlag },\n              'm2': { 'restart': restartFlag }\n            });\n            done();\n          });\n      });\n    });\n\n  });\n}\n\nclass MockMetric extends Metric {\n  _id:string;\n\n  constructor(id) {\n    super();\n    this._id = id;\n  }\n\n  beginMeasure():Promise {\n    return PromiseWrapper.resolve(`${this._id}_beginMeasure`);\n  }\n\n  endMeasure(restart:boolean):Promise<StringMap> {\n    var result = {};\n    result[this._id] = {\n      'restart': restart\n    };\n    return PromiseWrapper.resolve(result);\n  }\n\n  describe():StringMap {\n    var result = {};\n    result[this._id] = 'describe';\n    return result;\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}