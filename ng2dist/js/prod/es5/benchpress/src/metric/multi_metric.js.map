{"version":3,"sources":["@traceur/generated/TemplateParser/22","benchpress/src/metric/multi_metric.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/13","benchpress/src/metric/@traceur/generated/TemplateParser/10","benchpress/src/metric/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"benchpress/src/metric/multi_metric.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import { bind, Injector, OpaqueToken } from 'angular2/di';\nimport { List, ListWrapper, StringMapWrapper, StringMap } from 'angular2/src/facade/collection';\nimport { Promise, PromiseWrapper } from 'angular2/src/facade/async';\n\nimport { Metric } from '../metric';\n\nexport class MultiMetric extends Metric {\n  static createBindings(childTokens) {\n    return [\n      bind(_CHILDREN).toAsyncFactory(\n        (injector) => PromiseWrapper.all(ListWrapper.map(childTokens, (token) => injector.asyncGet(token) )),\n        [Injector]\n      ),\n      bind(MultiMetric).toFactory(\n        (children) => new MultiMetric(children),\n        [_CHILDREN]\n      )\n    ];\n  }\n\n  _metrics:List;\n\n  constructor(metrics) {\n    super();\n    this._metrics = metrics;\n  }\n\n  /**\n   * Starts measuring\n   */\n  beginMeasure():Promise {\n    return PromiseWrapper.all(ListWrapper.map(\n      this._metrics, (metric) => metric.beginMeasure()\n    ));\n  }\n\n  /**\n   * Ends measuring and reports the data\n   * since the begin call.\n   * @param restart: Whether to restart right after this.\n   */\n  endMeasure(restart:boolean):Promise<StringMap> {\n    return PromiseWrapper.all(ListWrapper.map(\n      this._metrics, (metric) => metric.endMeasure(restart)\n    )).then( (values) => {\n      return mergeStringMaps(values);\n    });\n  }\n\n  /**\n   * Describes the metrics provided by this metric implementation.\n   * (e.g. units, ...)\n   */\n  describe():StringMap {\n    return mergeStringMaps(this._metrics.map( (metric) => metric.describe() ));\n  }\n}\n\nfunction mergeStringMaps(maps) {\n  var result = {};\n  ListWrapper.forEach(maps, (map) => {\n    StringMapWrapper.forEach(map, (value, prop) => {\n      result[prop] = value;\n    });\n  });\n  return result;\n}\n\nvar _CHILDREN = new OpaqueToken('MultiMetric.children');\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}