{"version":3,"sources":["@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/27","benchpress/src/metric.js","benchpress/src/@traceur/generated/TemplateParser/10","benchpress/src/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,4GAAoB,UAAS,SAAQ;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,WAAoB,KAAG,KAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;aGFY,CAAA,SAAQ,AAAC,YCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,SCYP,SAAM,OAAK,KDZgC,AC4ClD,CD5CmD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;ACuB5C,qBAAW,CAAX,UAAY,AAAW,CAAA;AACrB,gBAAM,IAAI,cAAY,AAAE,CAAA,KAAI,CAAC,CAAC;UAChC;AAOA,mBAAS,CAAT,UAAW,OAAM,CAA8B;AAC7C,gBAAM,IAAI,cAAa,AAAC,CAAA,KAAI,CAAC,CAAC;UAChC;AAMA,iBAAO,CAAP,UAAS,AAAY,CAAA;AACnB,gBAAM,IAAI,cAAY,AAAE,CAAA,KAAI,CAAC,CAAC;UAChC;AAAA,WA9BO,MAAK,CAAZ,UAAc,aAAY;AACxB,iBACE,EAAA,IAAI,AAAC,CAAA,MAAK,CAAC,UAAW,AACpB,EAAC,SAAA,QAAO;mBAAM,SAAO;YAAA,EAAI,EAAA,aAAY,CAAC,CACxC,CACF,CAAC;UACH,EDjB8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;AGAtE,WAAK,eAAgB,CAAA,MAAA,CAAA,cAAA,CACZ,EAAA,GAAE,CAAG,UAAQ,AAAG,CAAA;AAAC,eAAA,EAAA,GDWzB,SAAO,AAAC,EAAC,CAAA,CCXuC;QAAC,CAAC,CAAC,CAAC;AADrD,WAAK,eAAe,AAAC,CAAA,MAAA,UAAA,WAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAQ,AAAG,CAAA;AAAC,eAAA,ECD1B,CAAA,MAAK,KAAK,QAAA,CAAA,CAAA,CDCuC;QAAC,CAAC,CAAC,CAAC;INCtB;EAC3B,CAAA;ADDI,CAAC,CAAC;AM2BsB","file":"benchpress/src/metric.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/dist/js/prod/es6/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import { bind } from 'angular2/di';\nimport {\n  Promise, PromiseWrapper\n} from 'angular2/src/facade/async';\nimport {\n  ABSTRACT, BaseException\n} from 'angular2/src/facade/lang';\nimport { StringMap } from 'angular2/src/facade/collection';\n\n/**\n * A metric is measures values\n */\n@ABSTRACT()\nexport class Metric {\n  static bindTo(delegateToken) {\n    return [\n      bind(Metric).toFactory(\n        (delegate) => delegate, [delegateToken]\n      )\n    ];\n  }\n\n  /**\n   * Starts measuring\n   */\n  beginMeasure():Promise {\n    throw new BaseException('NYI');\n  }\n\n  /**\n   * Ends measuring and reports the data\n   * since the begin call.\n   * @param restart: Whether to restart right after this.\n   */\n  endMeasure(restart:boolean):Promise<StringMap> {\n    throw new BaseException('NYI');\n  }\n\n  /**\n   * Describes the metrics provided by this metric implementation.\n   * (e.g. units, ...)\n   */\n  describe():StringMap {\n    throw new BaseException('NYI');\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}