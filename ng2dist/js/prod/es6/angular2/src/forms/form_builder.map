{"version":3,"sources":["form_builder.js","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA,KAAO,EAAC,gBAAe;AAAG,YAAU,CAAC,KAAO,iCAA+B,CAAC;AAC5E,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClD,KAAO,EAAC,YAAW;AAAG,QAAM;AAAG,gBAAc;AAAG,qBAAmB,CAAC,KAAO,iBAAe,CAAC;AAG3F,KAAO,MAAM,YAAU;AACrB,MAAI,CAAE,cAAa,CAAG,CAAA,KAAI,EAAI,KAAG,CAAgB;AAC/C,AAAI,MAAA,CAAA,QAAO,EAAI,CAAA,IAAG,gBAAgB,AAAC,CAAC,cAAa,CAAC,CAAC;AACnD,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,SAAQ,AAAC,CAAC,KAAI,CAAC,CAAA,CAAI,CAAA,gBAAe,IAAI,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAA,CAAI,KAAG,CAAC;AAClF,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,SAAQ,AAAC,CAAC,KAAI,CAAC,CAAA,CAAI,CAAA,gBAAe,IAAI,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAA,CAAI,KAAG,CAAC;AAElF,OAAI,SAAQ,AAAC,CAAC,SAAQ,CAAC,CAAG;AACxB,WAAO,IAAI,aAAW,AAAC,CAAC,QAAO,CAAG,UAAQ,CAAG,UAAQ,CAAC,CAAC;IACzD,KAAO;AACL,WAAO,IAAI,aAAW,AAAC,CAAC,QAAO,CAAG,UAAQ,CAAC,CAAC;IAC9C;AAAA,EACF;AAAA,AAEA,QAAM,CAAE,KAAI,CAAG,CAAA,SAAQ,EAAa,KAAG,CAAW;AAChD,OAAI,SAAQ,AAAC,CAAC,SAAQ,CAAC,CAAG;AACxB,WAAO,IAAI,QAAM,AAAC,CAAC,KAAI,CAAG,UAAQ,CAAC,CAAC;IACtC,KAAO;AACL,WAAO,IAAI,QAAM,AAAC,CAAC,KAAI,CAAC,CAAC;IAC3B;AAAA,EACF;AAAA,AAEA,gBAAc,CAAE,cAAa,CAAG;AAC9B,AAAI,MAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,mBAAe,QAAQ,AAAC,CAAC,cAAa,CAAG,EAAC,aAAY,CAAG,CAAA,WAAU,IAAM;AACvE,aAAO,CAAE,WAAU,CAAC,EAAI,CAAA,IAAG,eAAe,AAAC,CAAC,aAAY,CAAC,CAAC;IAC5D,CAAC,CAAC;AACF,SAAO,SAAO,CAAC;EACjB;AAAA,AAEA,eAAa,CAAE,aAAY,CAAG;AAC5B,OAAI,aAAY,WAAa,QAAM,CAAA,EAAK,CAAA,aAAY,WAAa,aAAW,CAAG;AAC7E,WAAO,cAAY,CAAC;IAEtB,KAAO,KAAI,WAAU,OAAO,AAAC,CAAC,aAAY,CAAC,CAAG;AAC5C,AAAI,QAAA,CAAA,KAAI,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,aAAY,CAAG,EAAA,CAAC,CAAC;AAC7C,AAAI,QAAA,CAAA,SAAQ,EAAI,CAAA,aAAY,OAAO,EAAI,EAAA,CAAA,CAAI,CAAA,aAAY,CAAE,CAAA,CAAC,EAAI,KAAG,CAAC;AAClE,WAAO,CAAA,IAAG,QAAQ,AAAC,CAAC,KAAI,CAAG,UAAQ,CAAC,CAAC;IAEvC,KAAO;AACL,WAAO,CAAA,IAAG,QAAQ,AAAC,CAAC,aAAY,CAAC,CAAC;IACpC;AAAA,EACF;AAAA,AACF;AAAA,AC/CA,KAAK,eAAe,AAAC,6CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBDiBC,QAAO,GCjBe;EAAC,CAAC,CAAC,CAAC;AD8CrD","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/form_builder.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/","sourcesContent":["import {StringMapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {ControlGroup, Control, OptionalControl, OptionalControlGroup} from 'angular2/forms';\n\n\nexport class FormBuilder {\n  group(controlsConfig, extra = null):ControlGroup {\n    var controls = this._reduceControls(controlsConfig);\n    var optionals = isPresent(extra) ? StringMapWrapper.get(extra, \"optionals\") : null;\n    var validator = isPresent(extra) ? StringMapWrapper.get(extra, \"validator\") : null;\n\n    if (isPresent(validator)) {\n      return new ControlGroup(controls, optionals, validator);\n    } else {\n      return new ControlGroup(controls, optionals);\n    }\n  }\n\n  control(value, validator:Function = null):Control {\n    if (isPresent(validator)) {\n      return new Control(value, validator);\n    } else {\n      return new Control(value);\n    }\n  }\n\n  _reduceControls(controlsConfig) {\n    var controls = {};\n    StringMapWrapper.forEach(controlsConfig, (controlConfig, controlName) => {\n      controls[controlName] = this._createControl(controlConfig);\n    });\n    return controls;\n  }\n\n  _createControl(controlConfig) {\n    if (controlConfig instanceof Control || controlConfig instanceof ControlGroup) {\n      return controlConfig;\n\n    } else if (ListWrapper.isList(controlConfig)) {\n      var value = ListWrapper.get(controlConfig, 0);\n      var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n      return this.control(value, validator);\n\n    } else {\n      return this.control(controlConfig);\n    }\n  }\n}","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}