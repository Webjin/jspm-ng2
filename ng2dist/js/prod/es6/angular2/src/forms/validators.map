{"version":3,"sources":["validators.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"AAAA,KAAO,EAAC,OAAM;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AAC3D,KAAO,EAAC,IAAG;AAAG,YAAU;AAAG,iBAAe,CAAC,KAAO,iCAA+B,CAAC;AAElF,KAAO,EAAC,YAAW;AAAG,QAAM,CAAC,KAAO,iBAAe,CAAC;AAEpD,KAAO,SAAS,SAAO,CAAE,CAAA,AAAQ,CAAG;AAClC,OAAO,CAAA,OAAM,AAAC,CAAC,CAAA,MAAM,CAAC,CAAA,EAAK,CAAA,CAAA,MAAM,GAAK,GAAC,CAAA,CAAI,EAAC,UAAS,CAAI,KAAG,CAAC,EAAI,KAAG,CAAC;AACvE;AAAA,ACPA,KAAK,eAAe,AAAC,wBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDIC,OAAM,GCJgB;EAAC,CAAC,CAAC,CAAC;ADQrD,KAAO,SAAS,cAAY,CAAE,CAAA,AAAQ,CAAG;AACvC,OAAO,KAAG,CAAC;AACb;AAAA,ACXA,KAAK,eAAe,AAAC,6BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDQM,OAAM,GCRW;EAAC,CAAC,CAAC,CAAC;ADYrD,KAAO,SAAS,QAAM,CAAE,UAAS,AAAe,CAAY;AAC1D,OAAO,UAAS,CAAA,AAAQ,CAAG;AACzB,AAAI,MAAA,CAAA,GAAE,EAAI,CAAA,WAAU,OAAO,AAAC,CAAC,UAAS,CAAG,EAAC,GAAE,CAAG,CAAA,SAAQ,IAAM;AAC3D,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;AACzB,WAAO,CAAA,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAA,CAAI,CAAA,gBAAe,MAAM,AAAC,CAAC,GAAE,CAAG,OAAK,CAAC,CAAA,CAAI,IAAE,CAAC;IACtE,CAAG,GAAC,CAAC,CAAC;AACN,SAAO,CAAA,gBAAe,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,KAAG,EAAI,IAAE,CAAC;EACnD,CAAA;AACF;AAAA,ACrBA,KAAK,eAAe,AAAC,uBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YCD1B,MAAK,YAAY,AFakB,CAAA,IAAG,CAAE,SAAO,CAAC,AEbZ,GDCa;EAAC,CAAC,CAAC,CAAC;ADsBrD,KAAO,SAAS,sBAAoB,CAAE,CAAA,AAAa,CAAG;AACpD,AAAI,IAAA,CAAA,GAAE,EAAI,GAAC,CAAC;AACZ,iBAAe,QAAQ,AAAC,CAAC,CAAA,SAAS,CAAG,EAAC,OAAM,CAAG,CAAA,IAAG,IAAM;AACtD,OAAI,CAAA,SAAS,AAAC,CAAC,IAAG,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,OAAM,OAAO,CAAC,CAAG;AACjD,qBAAe,QAAQ,AAAC,CAAC,OAAM,OAAO,CAAG,EAAC,KAAI,CAAG,CAAA,KAAI,IAAM;AACzD,WAAI,CAAE,gBAAe,SAAS,AAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAG;AAC3C,YAAE,CAAE,KAAI,CAAC,EAAI,GAAC,CAAC;QACjB;AAAA,AACA,kBAAU,KAAK,AAAC,CAAC,GAAE,CAAE,KAAI,CAAC,CAAG,QAAM,CAAC,CAAC;MACvC,CAAC,CAAC;IACJ;AAAA,EACF,CAAC,CAAC;AACF,OAAO,CAAA,gBAAe,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,KAAG,EAAI,IAAE,CAAC;AACnD;AAAA,ACpCA,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDsBc,YAAW,GCtBF;EAAC,CAAC,CAAC,CAAC;ADoCrD","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/validators.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/","sourcesContent":["import {isBlank, isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {ControlGroup, Control} from 'angular2/forms';\n\nexport function required(c:Control) {\n  return isBlank(c.value) || c.value == \"\" ? {\"required\" : true} : null;\n}\n\nexport function nullValidator(c:Control) {\n  return null;\n}\n\nexport function compose(validators:List<Function>):Function {\n  return function(c:Control) {\n    var res = ListWrapper.reduce(validators, (res, validator) => {\n      var errors = validator(c);\n      return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n    }, {});\n    return StringMapWrapper.isEmpty(res) ? null : res;\n  }\n}\n\nexport function controlGroupValidator(c:ControlGroup) {\n  var res = {};\n  StringMapWrapper.forEach(c.controls, (control, name) => {\n    if (c.contains(name) && isPresent(control.errors)) {\n      StringMapWrapper.forEach(control.errors, (value, error) => {\n        if (! StringMapWrapper.contains(res, error)) {\n          res[error] = [];\n        }\n        ListWrapper.push(res[error], control);\n      });\n    }\n  });\n  return StringMapWrapper.isEmpty(res) ? null : res;\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)"]}