{"version":3,"sources":["directives.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/1101"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/directives.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/","sourcesContent":["import {Template, Component, Decorator, NgElement, Ancestor, onChange} from 'angular2/core';\nimport {Optional} from 'angular2/di';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {isBlank, isPresent, isString, CONST} from 'angular2/src/facade/lang';\nimport {StringMapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {ControlGroup, Control} from './model';\nimport * as validators from './validators';\n\n@CONST()\nexport class ControlValueAccessor {\n  readValue(el){}\n  writeValue(el, value):void {}\n}\n\n@CONST()\nclass DefaultControlValueAccessor extends ControlValueAccessor {\n  constructor() {\n    super();\n  }\n\n  readValue(el) {\n    return DOM.getValue(el);\n  }\n\n  writeValue(el, value):void {\n    DOM.setValue(el,value);\n  }\n}\n\n@CONST()\nclass CheckboxControlValueAccessor extends ControlValueAccessor {\n  constructor() {\n    super();\n  }\n\n  readValue(el):boolean {\n    return DOM.getChecked(el);\n  }\n\n  writeValue(el, value:boolean):void {\n    DOM.setChecked(el, value);\n  }\n}\n\nvar controlValueAccessors = {\n  \"checkbox\" : new CheckboxControlValueAccessor(),\n  \"text\" : new DefaultControlValueAccessor()\n};\n\nfunction controlValueAccessorFor(controlType:string):ControlValueAccessor {\n  var accessor = StringMapWrapper.get(controlValueAccessors, controlType);\n  if (isPresent(accessor)) {\n    return accessor;\n  } else {\n    return StringMapWrapper.get(controlValueAccessors, \"text\");\n  }\n}\n\n@Decorator({\n  lifecycle: [onChange],\n  selector: '[control]',\n  bind: {\n    'controlName' : 'control',\n    'type' : 'type'\n  }\n})\nexport class ControlDirective {\n  _groupDirective:ControlGroupDirective;\n  _el:NgElement;\n\n  controlName:string;\n  type:string;\n  valueAccessor:ControlValueAccessor;\n\n  validator:Function;\n\n  constructor(@Ancestor() groupDirective:ControlGroupDirective, el:NgElement)  {\n    this._groupDirective = groupDirective;\n    this._el = el;\n    this.validator = validators.nullValidator;\n  }\n\n  // TODO: vsavkin this should be moved into the constructor once static bindings\n  // are implemented\n  onChange(_) {\n    this._initialize();\n  }\n\n  _initialize() {\n    this._groupDirective.addDirective(this);\n\n    var c = this._control();\n    c.validator = validators.compose([c.validator, this.validator]);\n\n    if (isBlank(this.valueAccessor)) {\n      this.valueAccessor = controlValueAccessorFor(this.type);\n    }\n\n    this._updateDomValue();\n    DOM.on(this._el.domElement, \"change\", (_) => this._updateControlValue());\n  }\n\n  _updateDomValue() {\n    this.valueAccessor.writeValue(this._el.domElement, this._control().value);\n  }\n\n  _updateControlValue() {\n    this._control().updateValue(this.valueAccessor.readValue(this._el.domElement));\n  }\n\n  _control() {\n    return this._groupDirective.findControl(this.controlName);\n  }\n}\n\n@Decorator({\n  selector: '[control-group]',\n  bind: {\n    'controlGroup' : 'control-group'\n  }\n})\nexport class ControlGroupDirective {\n  _groupDirective:ControlGroupDirective;\n  _controlGroupName:string;\n\n  _controlGroup:ControlGroup;\n  _directives:List<ControlDirective>;\n\n  constructor(@Optional() @Ancestor() groupDirective:ControlGroupDirective) {\n    super();\n    this._groupDirective = groupDirective;\n    this._directives = ListWrapper.create();\n  }\n\n  set controlGroup(controlGroup) {\n    if (isString(controlGroup)) {\n      this._controlGroupName = controlGroup;\n    } else {\n      this._controlGroup = controlGroup;\n    }\n    this._updateDomValue();\n  }\n\n  _updateDomValue() {\n    ListWrapper.forEach(this._directives, (cd) => cd._updateDomValue());\n  }\n\n  addDirective(c:ControlDirective) {\n    ListWrapper.push(this._directives, c);\n  }\n\n  findControl(name:string):any {\n    return this._getControlGroup().controls[name];\n  }\n\n  _getControlGroup():ControlGroup {\n    if (isPresent(this._controlGroupName)) {\n      return this._groupDirective.findControl(this._controlGroupName)\n    } else {\n      return this._controlGroup;\n    }\n  }\n}\n\nexport var FormDirectives = [\n  ControlGroupDirective, ControlDirective\n];\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.$__placeholder__0)","assert.argumentTypes($__placeholder__0)","assert.type.any"]}