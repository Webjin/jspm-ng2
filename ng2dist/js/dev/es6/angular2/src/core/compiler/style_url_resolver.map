{"version":3,"sources":["style_url_resolver.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAGA;AAAA,KAAO,EAAC,MAAK;AAAG,cAAY;AAAG,cAAY,CAAC,KAAO,2BAAyB,CAAC;AAC7E,KAAO,EAAC,WAAU,CAAC,KAAO,iBAAe,CAAC;AAK1C,KAAO,MAAM,iBAAe;AAG1B,YAAU,CAAE,QAAO,AAAa,CAAG;ACZrC,SAAK,cAAc,UDYK,YAAU,CCZI,CAAA;ADalC,OAAG,UAAU,EAAI,SAAO,CAAC;EAC3B;AAAA,AAEA,YAAU,CAAE,OAAM,AAAQ,CAAG,CAAA,OAAM,AAAQ,CAAG;AChBhD,SAAK,cAAc,SCAnB,CAAA,MAAK,KAAK,iBAAV,CAAA,MAAK,KAAK,QDA4B,CAAA;ADiBlC,UAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,OAAM,CAAG,UAAQ,CAAG,QAAM,CAAC,CAAC;AACxD,UAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,OAAM,CAAG,aAAW,CAAG,QAAM,CAAC,CAAC;AAC3D,SAAO,QAAM,CAAC;EAChB;AAAA,AAEA,aAAW,CAAE,OAAM,AAAQ,CAAG,CAAA,EAAC,AAAQ,CAAG,CAAA,OAAM,AAAQ,CAAG;ACtB7D,SAAK,cAAc,SCAnB,CAAA,MAAK,KAAK,YFsB0B,OAAK,UEtBzC,CAAA,MAAK,KAAK,QDA4B,CAAA;ADuBlC,SAAO,CAAA,aAAY,iBAAiB,AAAC,CAAC,OAAM,CAAG,GAAC,CAAG,EAAC,CAAA,IAAM;AACxD,AAAI,QAAA,CAAA,GAAE,EAAI,CAAA,CAAA,CAAE,CAAA,CAAC,CAAC;AACd,AAAI,QAAA,CAAA,GAAE,EAAI,CAAA,aAAY,WAAW,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAG,SAAO,CAAG,GAAC,CAAC,CAAC;AACtD,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,CAAA,CAAE,CAAA,CAAC,CAAC;AAEf,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,IAAG,UAAU,QAAQ,AAAC,CAAC,OAAM,CAAG,IAAE,CAAC,CAAC;AAEtD,WAAO,CAAA,GAAE,EAAI,IAAE,CAAA,CAAI,YAAU,CAAA,CAAI,IAAE,CAAA,CAAI,KAAG,CAAC;IAC7C,CAAC,CAAC;EACJ;AAAA,AACF;AAAA,AGjCA,KAAK,eAAe,AAAC,gCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YHWF,WAAU,GGXe;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,WAAV,MAAK,KAAK,UCCuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,uDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YDD1B,MAAK,KAAK,WFsB0B,MAAK,IEtBzC,MAAK,KAAK,UCCuC;EAAC,CAAC,CAAC,CAAC;AHkCrD,AAAI,EAAA,CAAA,SAAQ,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,sBAAqB,CAAC,CAAC;AAC5D,AAAI,EAAA,CAAA,YAAW,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,mDAAkD,CAAC,CAAC;AAC5F,AAAI,EAAA,CAAA,QAAO,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,OAAM,CAAC,CAAC;AAC5C","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/style_url_resolver.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/","sourcesContent":["// Some of the code comes from WebComponents.JS\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\n\nimport {RegExp, RegExpWrapper, StringWrapper} from 'angular2/src/facade/lang';\nimport {UrlResolver} from './url_resolver';\n\n/**\n * Rewrites URLs by resolving '@import' and 'url()' URLs from the given base URL.\n */\nexport class StyleUrlResolver {\n  _resolver: UrlResolver;\n\n  constructor(resolver: UrlResolver) {\n    this._resolver = resolver;\n  }\n\n  resolveUrls(cssText: string, baseUrl: string) {\n    cssText = this._replaceUrls(cssText, _cssUrlRe, baseUrl);\n    cssText = this._replaceUrls(cssText, _cssImportRe, baseUrl);\n    return cssText;\n  }\n\n  _replaceUrls(cssText: string, re: RegExp, baseUrl: string) {\n    return StringWrapper.replaceAllMapped(cssText, re, (m) => {\n      var pre = m[1];\n      var url = StringWrapper.replaceAll(m[2], _quoteRe, '');\n      var post = m[3];\n\n      var resolvedUrl = this._resolver.resolve(baseUrl, url);\n\n      return pre + \"'\" + resolvedUrl + \"'\" + post;\n    });\n  }\n}\n\nvar _cssUrlRe = RegExpWrapper.create('(url\\\\()([^)]*)(\\\\))');\nvar _cssImportRe = RegExpWrapper.create('(@import[\\\\s]+(?!url\\\\())[\\'\"]([^\\'\"]*)[\\'\"](.*;)');\nvar _quoteRe = RegExpWrapper.create('[\\'\"]');\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}