{"version":3,"sources":["integration_spec.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/forms/integration_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/forms/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach,\n  el, queryView, dispatchEvent} from 'angular2/test_lib';\n\nimport {Lexer, Parser, ChangeDetector, dynamicChangeDetection} from 'angular2/change_detection';\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {CssProcessor} from 'angular2/src/core/compiler/css_processor';\n\nimport {MockTemplateResolver} from 'angular2/src/mock/template_resolver_mock';\n\nimport {Injector} from 'angular2/di';\n\nimport {Component, Decorator, Template} from 'angular2/core';\nimport {ControlGroupDirective, ControlDirective, Control, ControlGroup, OptionalControl,\n  ControlValueAccessor, RequiredValidatorDirective} from 'angular2/forms';\n\nimport * as validators from 'angular2/src/forms/validators';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nexport function main() {\n  function detectChanges(view) {\n    view.changeDetector.detectChanges();\n  }\n\n  function compile(componentType, template, context, callback) {\n    var tplResolver = new MockTemplateResolver();\n    var urlResolver = new UrlResolver();\n\n    var compiler = new Compiler(dynamicChangeDetection,\n      new TemplateLoader(null, null),\n      new DirectiveMetadataReader(),\n      new Parser(new Lexer()),\n      new CompilerCache(),\n      new NativeShadowDomStrategy(new StyleUrlResolver(urlResolver)),\n      tplResolver,\n      new ComponentUrlMapper(),\n      urlResolver,\n      new CssProcessor(null)\n    );\n\n    tplResolver.setTemplate(componentType, new Template({\n      inline: template,\n      directives: [ControlGroupDirective, ControlDirective, WrappedValue, RequiredValidatorDirective]\n    }));\n\n    compiler.compile(componentType).then((pv) => {\n      var view = pv.instantiate(null, null, reflector);\n      view.hydrate(new Injector([]), null, context);\n      detectChanges(view);\n      callback(view);\n    });\n  }\n\n  describe(\"integration tests\", () => {\n    it(\"should initialize DOM elements with the given form object\", (done) => {\n      var ctx = new MyComp(new ControlGroup({\n        \"login\": new Control(\"loginValue\")\n      }));\n\n      var t = `<div [control-group]=\"form\">\n                <input type=\"text\" control=\"login\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        var input = queryView(view, \"input\")\n        expect(input.value).toEqual(\"loginValue\");\n        done();\n      });\n    });\n\n    it(\"should update the control group values on DOM change\", (done) => {\n      var form = new ControlGroup({\n        \"login\": new Control(\"oldValue\")\n      });\n      var ctx = new MyComp(form);\n\n      var t = `<div [control-group]=\"form\">\n                <input type=\"text\" control=\"login\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        var input = queryView(view, \"input\")\n\n        input.value = \"updatedValue\";\n        dispatchEvent(input, \"change\");\n\n        expect(form.value).toEqual({\"login\": \"updatedValue\"});\n        done();\n      });\n    });\n\n    it(\"should update DOM elements when rebinding the control group\", (done) => {\n      var form = new ControlGroup({\n        \"login\": new Control(\"oldValue\")\n      });\n      var ctx = new MyComp(form);\n\n      var t = `<div [control-group]=\"form\">\n                <input type=\"text\" control=\"login\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        ctx.form = new ControlGroup({\n          \"login\": new Control(\"newValue\")\n        });\n        detectChanges(view);\n\n        var input = queryView(view, \"input\")\n        expect(input.value).toEqual(\"newValue\");\n        done();\n      });\n    });\n\n    it(\"should update DOM element when rebinding the control name\", (done) => {\n      var ctx = new MyComp(new ControlGroup({\n        \"one\": new Control(\"one\"),\n        \"two\": new Control(\"two\")\n      }), \"one\");\n\n      var t = `<div [control-group]=\"form\">\n                <input type=\"text\" [control]=\"name\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        var input = queryView(view, \"input\")\n        expect(input.value).toEqual(\"one\");\n\n        ctx.name = \"two\";\n        detectChanges(view);\n\n        expect(input.value).toEqual(\"two\");\n        done();\n      });\n    });\n\n    describe(\"different control types\", () => {\n      it(\"should support type=checkbox\", (done) => {\n        var ctx = new MyComp(new ControlGroup({\"checkbox\": new Control(true)}));\n\n        var t = `<div [control-group]=\"form\">\n                  <input type=\"checkbox\" control=\"checkbox\">\n                </div>`;\n\n        compile(MyComp, t, ctx, (view) => {\n          var input = queryView(view, \"input\")\n          expect(input.checked).toBe(true);\n\n          input.checked = false;\n          dispatchEvent(input, \"change\");\n\n          expect(ctx.form.value).toEqual({\"checkbox\" : false});\n          done();\n        });\n      });\n\n      it(\"should support custom value accessors\", (done) => {\n        var ctx = new MyComp(new ControlGroup({\"name\": new Control(\"aa\")}));\n\n        var t = `<div [control-group]=\"form\">\n                  <input type=\"text\" control=\"name\" wrapped-value>\n                </div>`;\n\n        compile(MyComp, t, ctx, (view) => {\n          var input = queryView(view, \"input\")\n          expect(input.value).toEqual(\"!aa!\");\n\n          input.value = \"!bb!\";\n          dispatchEvent(input, \"change\");\n\n          expect(ctx.form.value).toEqual({\"name\" : \"bb\"});\n          done();\n        });\n      });\n    });\n\n    describe(\"validations\", () => {\n      it(\"should use validators defined in html\",(done) => {\n        var form = new ControlGroup({\"login\": new Control(\"aa\")});\n        var ctx = new MyComp(form);\n\n        var t = `<div [control-group]=\"form\">\n                  <input type=\"text\" control=\"login\" required>\n                 </div>`;\n\n        compile(MyComp, t, ctx, (view) => {\n          expect(form.valid).toEqual(true);\n\n          var input = queryView(view, \"input\");\n\n          input.value = \"\";\n          dispatchEvent(input, \"change\");\n\n          expect(form.valid).toEqual(false);\n          done();\n        });\n      });\n\n      it(\"should use validators defined in the model\",(done) => {\n        var form = new ControlGroup({\"login\": new Control(\"aa\", validators.required)});\n        var ctx = new MyComp(form);\n\n        var t = `<div [control-group]=\"form\">\n                  <input type=\"text\" control=\"login\">\n                 </div>`;\n\n        compile(MyComp, t, ctx, (view) => {\n          expect(form.valid).toEqual(true);\n\n          var input = queryView(view, \"input\");\n\n          input.value = \"\";\n          dispatchEvent(input, \"change\");\n\n          expect(form.valid).toEqual(false);\n          done();\n        });\n      });\n    });\n\n    describe(\"nested forms\", () => {\n      it(\"should init DOM with the given form object\", (done) => {\n        var form = new ControlGroup({\n          \"nested\": new ControlGroup({\n            \"login\": new Control(\"value\")\n          })\n        });\n        var ctx = new MyComp(form);\n\n        var t = `<div [control-group]=\"form\">\n                    <div control-group=\"nested\">\n                      <input type=\"text\" control=\"login\">\n                    </div>\n                </div>`;\n\n        compile(MyComp, t, ctx, (view) => {\n          var input = queryView(view, \"input\")\n          expect(input.value).toEqual(\"value\");\n          done();\n        });\n      });\n\n      it(\"should update the control group values on DOM change\", (done) => {\n        var form = new ControlGroup({\n          \"nested\": new ControlGroup({\n            \"login\": new Control(\"value\")\n          })\n        });\n        var ctx = new MyComp(form);\n\n        var t = `<div [control-group]=\"form\">\n                    <div control-group=\"nested\">\n                      <input type=\"text\" control=\"login\">\n                    </div>\n                </div>`;\n\n        compile(MyComp, t, ctx, (view) => {\n          var input = queryView(view, \"input\")\n\n          input.value = \"updatedValue\";\n          dispatchEvent(input, \"change\");\n\n          expect(form.value).toEqual({\"nested\" : {\"login\" : \"updatedValue\"}});\n          done();\n        });\n      });\n    });\n  });\n}\n\n@Component({\n  selector: \"my-comp\"\n})\nclass MyComp {\n  form:ControlGroup;\n  name:string;\n\n  constructor(form = null, name = null) {\n    this.form = form;\n    this.name = name;\n  }\n}\n\nclass WrappedValueAccessor extends ControlValueAccessor {\n  readValue(el){\n    return el.value.substring(1, el.value.length - 1);\n  }\n\n  writeValue(el, value):void {\n    el.value = `!${value}!`;\n  }\n}\n\n@Decorator({\n  selector:'[wrapped-value]'\n})\nclass WrappedValue {\n  constructor(cd:ControlDirective) {\n    cd.valueAccessor = new WrappedValueAccessor();\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.argumentTypes($__placeholder__0)"]}