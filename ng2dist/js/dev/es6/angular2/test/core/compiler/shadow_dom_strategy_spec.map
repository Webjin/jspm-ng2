{"version":3,"sources":["shadow_dom_strategy_spec.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/core/compiler/shadow_dom_strategy_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/core/compiler/","sourcesContent":["import {describe, beforeEach, it, expect, ddescribe, iit, SpyObject, el} from 'angular2/test_lib';\n\nimport {\n  NativeShadowDomStrategy,\n  EmulatedScopedShadowDomStrategy,\n  EmulatedUnscopedShadowDomStrategy,\n  resetShadowDomCache,\n} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/core/compiler/style_inliner';\nimport {ProtoView} from 'angular2/src/core/compiler/view';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\n\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\n\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\n\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nimport {DynamicProtoChangeDetector} from 'angular2/change_detection';\n\nexport function main() {\n  var strategy;\n\n  describe('NativeShadowDomStratgey', () => {\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      strategy = new NativeShadowDomStrategy(styleUrlResolver);\n    });\n\n    it('should attach the view nodes to the shadow root', () => {\n      var host = el('<div></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null, null);\n\n      strategy.attachTemplate(host, view);\n      var shadowRoot = DOM.getShadowRoot(host);\n      expect(isPresent(shadowRoot)).toBeTruthy();\n      expect(shadowRoot).toHaveText('view');\n    });\n\n    it('should should not transform template elements', () => {\n      expect(strategy.getTemplateCompileStep(null)).toBe(null);\n    });\n\n    it('should rewrite style urls', () => {\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.createStyleElement('.one {background-image: url(\"img.jpg\");}');\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".one {background-image: url('http://base/img.jpg');}\");\n    });\n\n    it('should not inline import rules', () => {\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.createStyleElement('@import \"other.css\";');\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\"@import 'http://base/other.css';\");\n    });\n  });\n\n  describe('EmulatedScopedShadowDomStratgey', () => {\n    var xhr, styleHost;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      xhr = new FakeXHR();\n      var styleInliner = new StyleInliner(xhr, styleUrlResolver, urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null, null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var template = el('<div><style>.foo {background-image: url(\"img.jpg\");}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\" +\n        \"background-image: url(http://base/img.jpg);\\n\" +\n        \"}\");\n    });\n\n    it('should scope styles', () => {\n      var template = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n    });\n\n    it('should inline @import rules', (done) => {\n      xhr.reply('http://base/one.css', '.one {}');\n\n      var template = el('<div><style>@import \"one.css\";</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var parentElement = new CompileElement(template);\n      var compileElement = new CompileElement(styleElement);\n      var parentpv = new ProtoView(null, null, null);\n      parentElement.inheritedProtoView = parentpv;\n      step.process(parentElement, compileElement, null);\n\n      expect(parentpv.stylePromises.length).toEqual(1);\n      expect(parentpv.stylePromises[0]).toBePromise();\n\n      expect(styleElement).toHaveText('');\n      parentpv.stylePromises[0].then((_) => {\n        expect(styleElement).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n        done();\n      });\n    });\n\n    it('should return the same style given the same component', () => {\n      var template = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n\n      var template2 = el('<div><style>.foo {} :host {}</style></div>');\n      var step2 = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement2 = DOM.firstChild(template2);\n      var compileElement2 = new CompileElement(styleElement2);\n      step2.process(null, compileElement2, null);\n\n      expect(DOM.getText(styleElement)).toEqual(DOM.getText(styleElement2));\n    });\n\n    it('should return different styles given different components', () => {\n      var template = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n\n      var template2 = el('<div><style>.foo {} :host {}</style></div>');\n      var cmpMetadata2 = new DirectiveMetadata(SomeOtherComponent, null);\n      var step2 = strategy.getStyleCompileStep(cmpMetadata2, 'http://base');\n      var styleElement2 = DOM.firstChild(template2);\n      var compileElement2 = new CompileElement(styleElement2);\n      step2.process(null, compileElement2, null);\n\n      expect(DOM.getText(styleElement)).not.toEqual(DOM.getText(styleElement2));\n    });\n\n    it('should move the style element to the style host', () => {\n      var template = el('<div><style>.one {}</style></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getStyleCompileStep(cmpMetadata, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(template).toHaveText('');\n      expect(styleHost).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n    });\n\n    it('should add an attribute to the content elements', () => {\n      var template = el('<div></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getTemplateCompileStep(cmpMetadata);\n      var compileElement = new CompileElement(template);\n      step.process(null, compileElement, null);\n      expect(DOM.getAttribute(template, '_ngcontent-0')).toEqual('');\n    });\n\n    it('should add an attribute to the host elements', () => {\n      var template = el('<div></div>');\n      var cmpMetadata = new DirectiveMetadata(SomeComponent, null);\n      var step = strategy.getTemplateCompileStep(cmpMetadata);\n      var compileElement = new CompileElement(template);\n      compileElement.componentDirective = new DirectiveMetadata(SomeOtherComponent, null);\n      step.process(null, compileElement, null);\n      expect(DOM.getAttribute(template, '_nghost-1')).toEqual('');\n    });\n  });\n\n  describe('EmulatedUnscopedShadowDomStratgey', () => {\n    var styleHost;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var pv = new ProtoView(nodes, new DynamicProtoChangeDetector(null), null);\n      var view = pv.instantiate(null, null, null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var template = el('<div><style>.one {background-image: url(\"img.jpg\");}</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\".one {background-image: url('http://base/img.jpg');}\");\n    });\n\n    it('should not inline import rules', () => {\n      var template = el('<div><style>@import \"other.css\";</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleElement).toHaveText(\"@import 'http://base/other.css';\");\n    });\n\n    it('should move the style element to the style host', () => {\n      var template = el('<div><style>/*css*/</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElement = DOM.firstChild(template);\n      var compileElement = new CompileElement(styleElement);\n      step.process(null, compileElement, null);\n      expect(styleHost).toHaveText(\"/*css*/\");\n    });\n\n    it('should insert the same style only once in the style host', () => {\n      var template = el('<div><style>/*css1*/</style><style>/*css2*/</style>' +\n                        '<style>/*css1*/</style></div>')\n      var step = strategy.getStyleCompileStep(null, 'http://base');\n      var styleElements = DOM.childNodes(template);\n      var compileElement = new CompileElement(styleElements[0]);\n      step.process(null, compileElement, null);\n      compileElement = new CompileElement(styleElements[0]);\n      step.process(null, compileElement, null);\n      compileElement = new CompileElement(styleElements[0]);\n      step.process(null, compileElement, null);\n\n      expect(styleHost).toHaveText(\"/*css1*//*css2*/\");\n    });\n  });\n}\n\nclass FakeXHR extends XHR {\n  _responses: Map;\n\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n\n  get(url: string): Promise<string> {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n\n    return PromiseWrapper.resolve(response);\n  }\n\n  reply(url: string, response: string) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\n\nclass SomeComponent {}\nclass SomeOtherComponent {}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}