{"version":3,"sources":["perflog_metric_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/benchpress/test/metric/perflog_metric_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/benchpress/test/metric/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport { List, ListWrapper } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\nimport { isPresent } from 'angular2/src/facade/lang';\n\nimport { Metric, PerflogMetric, WebDriverExtension, bind, Injector, Options } from 'benchpress/common';\n\nimport { TraceEventFactory } from '../trace_event_factory';\n\nexport function main() {\n  var commandLog;\n  var eventFactory = new TraceEventFactory('timeline', 'pid0');\n\n  function createMetric(perfLogs, microIterations = 0) {\n    commandLog = [];\n    var bindings = [\n      PerflogMetric.BINDINGS,\n      bind(PerflogMetric.SET_TIMEOUT).toValue( (fn, millis) => {\n        ListWrapper.push(commandLog, ['setTimeout', millis]);\n        fn();\n      }),\n      bind(WebDriverExtension).toValue(new MockDriverExtension(perfLogs, commandLog)),\n      bind(Options.MICRO_ITERATIONS).toValue(microIterations)\n    ];\n    return new Injector(bindings).get(PerflogMetric);\n  }\n\n  describe('perflog metric', () => {\n\n    it('should describe itself', () => {\n      expect(createMetric([[]]).describe()['script']).toBe('script execution time in ms');\n    });\n\n    describe('beginMeasure', () => {\n\n      it('should mark the timeline', (done) => {\n        var metric = createMetric([[]]);\n        metric.beginMeasure().then((_) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0']]);\n\n          done();\n        });\n      });\n\n    });\n\n    describe('endMeasure', () => {\n\n      it('should mark and aggregate events in between the marks', (done) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.start('script', 4),\n            eventFactory.end('script', 6),\n            eventFactory.markEnd('benchpress0', 10)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(2);\n\n            done();\n        });\n      });\n\n      it('should restart timing', (done) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.markEnd('benchpress0', 1),\n            eventFactory.markStart('benchpress1', 2),\n          ], [\n            eventFactory.markEnd('benchpress1', 3)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n\n            done();\n        });\n      });\n\n      it('should loop and aggregate until the end mark is present', (done) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 1) ],\n          [ eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress0', 10) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(3);\n\n            done();\n        });\n      });\n\n      it('should store events after the end mark for the next call', (done) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.markEnd('benchpress0', 1), eventFactory.markStart('benchpress1', 1),\n            eventFactory.start('script', 1), eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress1', 6) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (data) => {\n            expect(data['script']).toBe(0);\n            return metric.endMeasure(true)\n          })\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n            expect(data['script']).toBe(3);\n\n            done();\n        });\n      });\n\n    });\n\n    describe('aggregation', () => {\n\n      function aggregate(events, microIterations = 0) {\n        ListWrapper.insert(events, 0, eventFactory.markStart('benchpress0', 0));\n        ListWrapper.push(events, eventFactory.markEnd('benchpress0', 10));\n        var metric = createMetric([events], microIterations);\n        return metric\n          .beginMeasure().then( (_) => metric.endMeasure(false) );\n      }\n\n\n      it('should report a single interval', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['script']).toBe(5);\n          done();\n        });\n      });\n\n      it('should sum up multiple intervals', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5),\n          eventFactory.start('script', 10),\n          eventFactory.end('script', 17)\n        ]).then((data) => {\n          expect(data['script']).toBe(12);\n          done();\n        });\n      });\n\n      it('should ignore not started intervals', (done) => {\n        aggregate([\n          eventFactory.end('script', 10)\n        ]).then((data) => {\n          expect(data['script']).toBe(0);\n          done();\n        });\n      });\n\n      it('should ignore not ended intervals', (done) => {\n        aggregate([\n          eventFactory.start('script', 10)\n        ]).then((data) => {\n          expect(data['script']).toBe(0);\n          done();\n        });\n      });\n\n      it('should ignore events from different processed as the start mark', (done) => {\n        var otherProcessEventFactory = new TraceEventFactory('timeline', 'pid1');\n        var metric = createMetric([[\n          eventFactory.markStart('benchpress0', 0),\n          eventFactory.start('script', 0, null),\n          eventFactory.end('script', 5, null),\n          otherProcessEventFactory.start('script', 10, null),\n          otherProcessEventFactory.end('script', 17, null),\n          eventFactory.markEnd('benchpress0', 20)\n        ]]);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then((data) => {\n            expect(data['script']).toBe(5);\n            done();\n          });\n      });\n\n      ['script', 'render'].forEach( (metricName) => {\n        it(`should support ${metricName} metric`, (done) => {\n          aggregate([\n            eventFactory.start(metricName, 0),\n            eventFactory.end(metricName, 5)\n          ]).then((data) => {\n            expect(data[metricName]).toBe(5);\n            done();\n          });\n        });\n      });\n\n      it('should support gcTime/gcAmount metric', (done) => {\n        aggregate([\n          eventFactory.start('gc', 0, {'usedHeapSize': 2500}),\n          eventFactory.end('gc', 5, {'usedHeapSize': 1000})\n        ]).then((data) => {\n          expect(data['gcTime']).toBe(5);\n          expect(data['gcAmount']).toBe(1.5);\n          expect(data['majorGcTime']).toBe(0);\n          expect(data['majorGcAmount']).toBe(0);\n          done();\n        });\n      });\n\n      it('should support majorGcTime/majorGcAmount metric', (done) => {\n        aggregate([\n          eventFactory.start('gc', 0, {'usedHeapSize': 2500}),\n          eventFactory.end('gc', 5, {'usedHeapSize': 1000, 'majorGc': true})\n        ]).then((data) => {\n          expect(data['gcTime']).toBe(5);\n          expect(data['gcAmount']).toBe(1.5);\n          expect(data['majorGcTime']).toBe(5);\n          expect(data['majorGcAmount']).toBe(1.5);\n          done();\n        });\n      });\n\n      it('should subtract gcTime in script from script time', (done) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.start('gc', 1, {'usedHeapSize': 1000}),\n          eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['script']).toBe(2);\n          done();\n        });\n      });\n\n      describe('microIterations', () => {\n\n        it('should not report scriptMicroAvg if microIterations = 0', (done) => {\n          aggregate([\n            eventFactory.start('script', 0),\n            eventFactory.end('script', 5)\n          ], 0).then((data) => {\n            expect(isPresent(data['scriptMicroAvg'])).toBe(false);\n            done();\n          });\n        });\n\n        it('should report scriptMicroAvg', (done) => {\n          aggregate([\n            eventFactory.start('script', 0),\n            eventFactory.end('script', 5)\n          ], 4).then((data) => {\n            expect(data['script']).toBe(5);\n            expect(data['scriptMicroAvg']).toBe(5/4);\n            done();\n          });\n        });\n\n      });\n\n    });\n\n  });\n}\n\nclass MockDriverExtension extends WebDriverExtension {\n  _perfLogs:List;\n  _commandLog:List;\n  constructor(perfLogs, commandLog) {\n    super();\n    this._perfLogs = perfLogs;\n    this._commandLog = commandLog;\n  }\n\n  timeBegin(name):Promise {\n    ListWrapper.push(this._commandLog, ['timeBegin', name]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  timeEnd(name, restartName):Promise {\n    ListWrapper.push(this._commandLog, ['timeEnd', name, restartName]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  readPerfLog():Promise {\n    ListWrapper.push(this._commandLog, 'readPerfLog');\n    if (this._perfLogs.length > 0) {\n      var next = this._perfLogs[0];\n      ListWrapper.removeAt(this._perfLogs, 0);\n      return PromiseWrapper.resolve(next);\n    } else {\n      return PromiseWrapper.resolve([]);\n    }\n  }\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}