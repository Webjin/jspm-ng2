{"version":3,"sources":["multi_metric_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/benchpress/test/metric/multi_metric_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/benchpress/test/metric/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport { List, ListWrapper, StringMap } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\n\nimport { Metric, MultiMetric, bind, Injector } from 'benchpress/common';\n\nexport function main() {\n  function createMetric(ids) {\n    return new Injector([\n      ListWrapper.map(ids, (id) => bind(id).toValue(new MockMetric(id)) ),\n      MultiMetric.createBindings(ids)\n    ]).asyncGet(MultiMetric);\n  }\n\n  describe('multi metric', () => {\n\n    it('should merge descriptions', (done) => {\n      createMetric(['m1', 'm2']).then( (m) => {\n        expect(m.describe()).toEqual({\n          'm1': 'describe', 'm2': 'describe'\n        });\n        done();\n      });\n    });\n\n    it('should merge all beginMeasure calls', (done) => {\n      createMetric(['m1', 'm2'])\n        .then( (m) => m.beginMeasure() )\n        .then( (values) => {\n          expect(values).toEqual([\n            'm1_beginMeasure', 'm2_beginMeasure'\n          ]);\n          done();\n        });\n    });\n\n    [false, true].forEach( (restartFlag) => {\n      it(`should merge all endMeasure calls for restart=${restartFlag}`, (done) => {\n        createMetric(['m1', 'm2'])\n          .then( (m) => m.endMeasure(restartFlag) )\n          .then( (values) => {\n            expect(values).toEqual({\n              'm1': { 'restart': restartFlag },\n              'm2': { 'restart': restartFlag }\n            });\n            done();\n          });\n      });\n    });\n\n  });\n}\n\nclass MockMetric extends Metric {\n  _id:string;\n\n  constructor(id) {\n    super();\n    this._id = id;\n  }\n\n  beginMeasure():Promise {\n    return PromiseWrapper.resolve(`${this._id}_beginMeasure`);\n  }\n\n  endMeasure(restart:boolean):Promise<StringMap> {\n    var result = {};\n    result[this._id] = {\n      'restart': restart\n    };\n    return PromiseWrapper.resolve(result);\n  }\n\n  describe():StringMap {\n    var result = {};\n    result[this._id] = 'describe';\n    return result;\n  }\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}