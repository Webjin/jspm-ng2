{"version":3,"sources":["validators.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/validators.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/forms/","sourcesContent":["import {isBlank, isPresent} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {ControlGroup, Control} from 'angular2/forms';\n\nexport function required(c:Control) {\n  return isBlank(c.value) || c.value == \"\" ? {\"required\" : true} : null;\n}\n\nexport function nullValidator(c:Control) {\n  return null;\n}\n\nexport function compose(validators:List<Function>):Function {\n  return function(c:Control) {\n    var res = ListWrapper.reduce(validators, (res, validator) => {\n      var errors = validator(c);\n      return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n    }, {});\n    return StringMapWrapper.isEmpty(res) ? null : res;\n  }\n}\n\nexport function controlGroupValidator(c:ControlGroup) {\n  var res = {};\n  StringMapWrapper.forEach(c.controls, (control, name) => {\n    if (c.contains(name) && isPresent(control.errors)) {\n      StringMapWrapper.forEach(control.errors, (value, error) => {\n        if (! StringMapWrapper.contains(res, error)) {\n          res[error] = [];\n        }\n        ListWrapper.push(res[error], control);\n      });\n    }\n  });\n  return StringMapWrapper.isEmpty(res) ? null : res;\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)"]}