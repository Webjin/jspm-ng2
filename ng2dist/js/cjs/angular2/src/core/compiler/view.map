{"version":3,"sources":["view.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/3081","@traceur/generated/TemplateParser/3083","@traceur/generated/TemplateParser/3084","@traceur/generated/TemplateParser/3085","@traceur/generated/TemplateParser/368","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/3086","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/2905","@traceur/generated/TemplateParser/3094","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/view.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Promise} from 'angular2/src/facade/async';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, ContextWithVariableBindings, ChangeDispatcher, ProtoChangeDetector, ChangeDetector, ChangeRecord}\n  from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects} from './element_injector';\nimport {BindingPropagationConfig} from './binding_propagation_config';\nimport {ElementBinder} from './element_binder';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {FIELD, IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {ViewContainer} from './view_container';\nimport {LightDom, DestinationLightDom} from './shadow_dom_emulation/light_dom';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {ViewPool} from './view_pool';\nimport {EventManager} from 'angular2/src/core/events/event_manager';\n\nimport {Reflector} from 'angular2/src/reflection/reflection';\n\nconst NG_BINDING_CLASS = 'ng-binding';\nconst NG_BINDING_CLASS_SELECTOR = '.ng-binding';\n\n// TODO(rado): make this configurable/smarter.\nvar VIEW_POOL_CAPACITY = 10000;\nvar VIEW_POOL_PREFILL = 0;\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n */\n@IMPLEMENTS(ChangeDispatcher)\nexport class View {\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  bindElements:List;\n  textNodes:List;\n  changeDetector:ChangeDetector;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  nodes:List;\n  componentChildViews: List<View>;\n  viewContainers: List<ViewContainer>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: ProtoView;\n  context: any;\n  contextWithLocals:ContextWithVariableBindings;\n\n  constructor(proto:ProtoView, nodes:List, protoChangeDetector:ProtoChangeDetector, protoContextLocals:Map) {\n    this.proto = proto;\n    this.nodes = nodes;\n    this.changeDetector = protoChangeDetector.instantiate(this);\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.textNodes = null;\n    this.bindElements = null;\n    this.componentChildViews = null;\n    this.viewContainers = null;\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.contextWithLocals = (MapWrapper.size(protoContextLocals) > 0)\n      ? new ContextWithVariableBindings(null, MapWrapper.clone(protoContextLocals))\n      : null;\n  }\n\n  init(elementInjectors:List, rootElementInjectors:List, textNodes: List, bindElements:List,\n    viewContainers:List, preBuiltObjects:List, componentChildViews:List) {\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.textNodes = textNodes;\n    this.bindElements = bindElements;\n    this.viewContainers = viewContainers;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.context.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _hydrateContext(newContext) {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.parent = newContext;\n      this.context = this.contextWithLocals;\n    } else {\n      this.context = newContext;\n    }\n    // TODO(tbosch): if we have a contextWithLocals we actually only need to\n    // set the contextWithLocals once. Would it be faster to always use a contextWithLocals\n    // even if we don't have locals and not update the recordRange here?\n    this.changeDetector.hydrate(this.context);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.clearValues();\n    }\n    this.context = null;\n    this.changeDetector.dehydrate();\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewcontainers are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object) {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n    this._hydrateContext(context);\n\n    // viewContainers\n    for (var i = 0; i < this.viewContainers.length; i++) {\n      this.viewContainers[i].hydrate(appInjector, hostElementInjector);\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var services = componentDirective.annotation.componentServices;\n        if (isPresent(services))\n          shadowDomAppInjector = appInjector.createChild(services);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          this.context.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          this.context.set(exportImplicitName, elementInjector.getNgElement().domElement);\n        }\n      }\n\n      if (isPresent(componentDirective)) {\n        this.componentChildViews[componentChildViewIndex++].hydrate(shadowDomAppInjector,\n          elementInjector, elementInjector.getComponent());\n      }\n    }\n\n    // this should be moved into DOM write queue\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      if (isPresent(componentDirective)) {\n        var lightDom = this.preBuiltObjects[i].lightDom;\n        if (isPresent(lightDom)) {\n          lightDom.redistribute();\n        }\n      }\n    }\n  }\n\n  dehydrate() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].dehydrate();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      if (isPresent(this.elementInjectors[i])) {\n        this.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewContainers\n    if (isPresent(this.viewContainers)) {\n      for (var i = 0; i < this.viewContainers.length; i++) {\n        this.viewContainers[i].dehydrate();\n      }\n    }\n\n    this._dehydrateContext();\n  }\n\n  /**\n   * Triggers the event handlers for the element and the directives.\n   *\n   * This method is intended to be called from directive EventEmitters.\n   *\n   * @param {string} eventName\n   * @param {*} eventObj\n   * @param {int} binderIndex\n   */\n  triggerEventHandlers(eventName: string, eventObj, binderIndex: int) {\n    var handlers = this.proto.eventHandlers[binderIndex];\n    if (isBlank(handlers)) return;\n    var handler = StringMapWrapper.get(handlers, eventName);\n    if (isBlank(handler)) return;\n    handler(eventObj, this);\n  }\n\n  onRecordChange(directiveMemento, records:List) {\n    this._invokeMementos(records);\n    if (directiveMemento instanceof DirectiveMemento) {\n      this._notifyDirectiveAboutChanges(directiveMemento, records);\n    }\n  }\n\n  _invokeMementos(records:List) {\n    for(var i = 0; i < records.length; ++i) {\n      this._invokeMementoFor(records[i]);\n    }\n  }\n\n  _notifyDirectiveAboutChanges(directiveMemento, records:List) {\n    var dir = directiveMemento.directive(this.elementInjectors);\n    var binding = directiveMemento.directiveBinding(this.elementInjectors);\n\n    if (binding.callOnChange) {\n      dir.onChange(this._collectChanges(records));\n    }\n  }\n\n    // dispatch to element injector or text nodes based on context\n  _invokeMementoFor(record:ChangeRecord) {\n    var memento = record.bindingMemento;\n    if (memento instanceof DirectiveBindingMemento) {\n      var directiveMemento:DirectiveBindingMemento = memento;\n      directiveMemento.invoke(record, this.elementInjectors);\n\n    } else if (memento instanceof ElementBindingMemento) {\n      var elementMemento:ElementBindingMemento = memento;\n      elementMemento.invoke(record, this.bindElements);\n\n    } else {\n      // we know it refers to _textNodes.\n      var textNodeIndex:number = memento;\n      DOM.setText(this.textNodes[textNodeIndex], record.currentValue);\n    }\n  }\n\n  _collectChanges(records:List) {\n    var changes = StringMapWrapper.create();\n    for(var i = 0; i < records.length; ++i) {\n      var record = records[i];\n      var propertyUpdate = new PropertyUpdate(record.currentValue, record.previousValue);\n      StringMapWrapper.set(changes, record.bindingMemento._setterName, propertyUpdate);\n    }\n    return changes;\n  }\n}\n\nexport class ProtoView {\n  element;\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoContextLocals:Map;\n  textNodesWithBindingCount:int;\n  elementsWithBindingCount:int;\n  instantiateInPlace:boolean;\n  rootBindingOffset:int;\n  isTemplateElement:boolean;\n  shadowDomStrategy: ShadowDomStrategy;\n  _viewPool: ViewPool;\n  stylePromises: List<Promise>;\n  // List<Map<eventName, handler>>, indexed by binder index\n  eventHandlers: List;\n\n  constructor(\n      template,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy) {\n    this.element = template;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoContextLocals = MapWrapper.create();\n    this.protoChangeDetector = protoChangeDetector;\n    this.textNodesWithBindingCount = 0;\n    this.elementsWithBindingCount = 0;\n    this.instantiateInPlace = false;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS))\n      ? 1 : 0;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.shadowDomStrategy = shadowDomStrategy;\n    this._viewPool = new ViewPool(VIEW_POOL_CAPACITY);\n    this.stylePromises = [];\n    this.eventHandlers = [];\n  }\n\n  // TODO(rado): hostElementInjector should be moved to hydrate phase.\n  instantiate(hostElementInjector: ElementInjector, eventManager: EventManager,\n    reflector: Reflector):View {\n    if (this._viewPool.length() == 0) this._preFillPool(hostElementInjector, eventManager,\n      reflector);\n    var view = this._viewPool.pop();\n    return isPresent(view) ? view : this._instantiate(hostElementInjector, eventManager, reflector);\n  }\n\n  _preFillPool(hostElementInjector: ElementInjector, eventManager: EventManager,\n    reflector: Reflector) {\n    for (var i = 0; i < VIEW_POOL_PREFILL; i++) {\n      this._viewPool.push(this._instantiate(hostElementInjector, eventManager, reflector));\n    }\n  }\n\n  _instantiate(hostElementInjector: ElementInjector, eventManager: EventManager,\n    reflector: Reflector): View {\n    var rootElementClone = this.instantiateInPlace ? this.element : DOM.importIntoDoc(this.element);\n    var elementsWithBindingsDynamic;\n    if (this.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(DOM.content(rootElementClone), NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic= DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var binderIdx = 0; binderIdx < elementsWithBindingsDynamic.length; ++binderIdx) {\n      elementsWithBindings[binderIdx] = elementsWithBindingsDynamic[binderIdx];\n    }\n\n    var viewNodes;\n    if (this.isTemplateElement) {\n      var childNode = DOM.firstChild(DOM.content(rootElementClone));\n      viewNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewNodes = [rootElementClone];\n    }\n\n    var view = new View(this, viewNodes, this.protoChangeDetector, this.protoContextLocals);\n    var binders = this.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var eventHandlers = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var textNodes = [];\n    var elementsWithPropertyBindings = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewContainers = [];\n    var componentChildViews = [];\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var element;\n      if (binderIdx === 0 && this.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[binderIdx - this.rootBindingOffset];\n      }\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector, null, reflector);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null, hostElementInjector, reflector);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[binderIdx] = elementInjector;\n\n      if (binder.hasElementPropertyBindings) {\n        ListWrapper.push(elementsWithPropertyBindings, element);\n      }\n\n      // textNodes\n      var textNodeIndices = binder.textNodeIndices;\n      if (isPresent(textNodeIndices)) {\n        var childNode = DOM.firstChild(DOM.templateAwareRoot(element));\n        for (var j = 0, k = 0; j < textNodeIndices.length; j++) {\n          for(var index = textNodeIndices[j]; k < index; k++) {\n            childNode = DOM.nextSibling(childNode);\n          }\n          ListWrapper.push(textNodes, childNode);\n        }\n      }\n\n      // componentChildViews\n      var lightDom = null;\n      var bindingPropagationConfig = null;\n      if (isPresent(binder.componentDirective)) {\n        var strategy = this.shadowDomStrategy;\n        var childView = binder.nestedProtoView.instantiate(elementInjector, eventManager, reflector);\n        view.changeDetector.addChild(childView.changeDetector);\n\n        lightDom = strategy.constructLightDom(view, childView, element);\n        strategy.attachTemplate(element, childView);\n\n        bindingPropagationConfig = new BindingPropagationConfig(view.changeDetector);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n\n      // viewContainers\n      var viewContainer = null;\n      if (isPresent(binder.viewportDirective)) {\n        var destLightDom = this._directParentElementLightDom(protoElementInjector, preBuiltObjects);\n        viewContainer = new ViewContainer(view, element, binder.nestedProtoView, elementInjector,\n          eventManager, reflector, destLightDom);\n        ListWrapper.push(viewContainers, viewContainer);\n      }\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[binderIdx] = new PreBuiltObjects(view, new NgElement(element), viewContainer,\n          lightDom, bindingPropagationConfig);\n      }\n\n      // events\n      if (isPresent(binder.events)) {\n        eventHandlers[binderIdx] = StringMapWrapper.create();\n        StringMapWrapper.forEach(binder.events, (eventMap, eventName) => {\n          var handler = ProtoView.buildEventHandler(eventMap, binderIdx);\n          StringMapWrapper.set(eventHandlers[binderIdx], eventName, handler);\n          if (isBlank(elementInjector) || !elementInjector.hasEventEmitter(eventName)) {\n            eventManager.addEventListener(element, eventName,\n              (event) => { handler(event, view); });\n          }\n        });\n      }\n    }\n\n    this.eventHandlers = eventHandlers;\n\n    view.init(elementInjectors, rootElementInjectors, textNodes, elementsWithPropertyBindings,\n      viewContainers, preBuiltObjects, componentChildViews);\n\n    return view;\n  }\n\n  returnToPool(view: View) {\n    this._viewPool.push(view);\n  }\n\n  /**\n   * Creates an event handler.\n   *\n   * @param {Map} eventMap Map directiveIndexes to expressions\n   * @param {int} injectorIdx\n   * @returns {Function}\n   */\n  static buildEventHandler(eventMap: Map, injectorIdx: int) {\n    var locals = MapWrapper.create();\n    return (event, view) => {\n      // Most of the time the event will be fired only when the view is in the live document.\n      // However, in a rare circumstance the view might get dehydrated, in between the event\n      // queuing up and firing.\n      if (view.hydrated()) {\n        MapWrapper.set(locals, '$event', event);\n        MapWrapper.forEach(eventMap, (expr, directiveIndex) => {\n          var context;\n          if (directiveIndex === -1) {\n            context = view.context;\n          } else {\n            context = view.elementInjectors[injectorIdx].getDirectiveAtIndex(directiveIndex);\n          }\n          expr.eval(new ContextWithVariableBindings(context, locals));\n        });\n      }\n    }\n  }\n\n  _directParentElementLightDom(protoElementInjector:ProtoElementInjector, preBuiltObjects:List):LightDom {\n    var p = protoElementInjector.directParent();\n    return isPresent(p) ? preBuiltObjects[p.index].lightDom : null;\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoContextLocals, templateName, null);\n  }\n\n  bindElement(protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveMetadata = null, viewportDirective:DirectiveMetadata = null):ElementBinder {\n    var elBinder = new ElementBinder(protoElementInjector, componentDirective, viewportDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(indexInParent:int, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.textNodeIndices)) {\n      elBinder.textNodeIndices = ListWrapper.create();\n    }\n    ListWrapper.push(elBinder.textNodeIndices, indexInParent);\n    var memento = this.textNodesWithBindingCount++;\n    this.protoChangeDetector.addAst(expression, memento);\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string, setter:SetterFn) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (!elBinder.hasElementPropertyBindings) {\n      elBinder.hasElementPropertyBindings = true;\n      this.elementsWithBindingCount++;\n    }\n    var memento = new ElementBindingMemento(this.elementsWithBindingCount-1, setterName, setter);\n    this.protoChangeDetector.addAst(expression, memento);\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement.\n   *\n   * If the directive index is a positive integer, the event is evaluated in the context of\n   * the given directive.\n   *\n   * If the directive index is -1, the event is evaluated in the context of the enclosing view.\n   *\n   * @param {string} eventName\n   * @param {AST} expression\n   * @param {int} directiveIndex The directive index in the binder or -1 when the event is not bound\n   *                             to a directive\n   */\n  bindEvent(eventName:string, expression:AST, directiveIndex: int = -1) {\n    var elBinder = this.elementBinders[this.elementBinders.length - 1];\n    var events = elBinder.events;\n    if (isBlank(events)) {\n      events = StringMapWrapper.create();\n      elBinder.events = events;\n    }\n    var event = StringMapWrapper.get(events, eventName);\n    if (isBlank(event)) {\n      event = MapWrapper.create();\n      StringMapWrapper.set(events, eventName, event);\n    }\n    MapWrapper.set(event, directiveIndex, expression);\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn) {\n\n    var bindingMemento = new DirectiveBindingMemento(\n      this.elementBinders.length-1,\n      directiveIndex,\n      setterName,\n      setter\n    );\n    var directiveMemento = DirectiveMemento.get(bindingMemento);\n    this.protoChangeDetector.addAst(expression, bindingMemento, directiveMemento);\n  }\n\n  // Create a rootView as if the compiler encountered <rootcmp></rootcmp>,\n  // and the component template is already compiled into protoView.\n  // Used for bootstrapping.\n  static createRootProtoView(protoView: ProtoView,\n      insertionElement,\n      rootComponentAnnotatedType: DirectiveMetadata,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy\n  ): ProtoView {\n\n    DOM.addClass(insertionElement, NG_BINDING_CLASS);\n    var cmpType = rootComponentAnnotatedType.type;\n    var rootProtoView = new ProtoView(insertionElement, protoChangeDetector, shadowDomStrategy);\n    rootProtoView.instantiateInPlace = true;\n    var binder = rootProtoView.bindElement(\n        new ProtoElementInjector(null, 0, [cmpType], true));\n    binder.componentDirective = rootComponentAnnotatedType;\n    binder.nestedProtoView = protoView;\n    shadowDomStrategy.shimAppElement(rootComponentAnnotatedType, insertionElement);\n    return rootProtoView;\n  }\n}\n\nexport class ElementBindingMemento {\n  _elementIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(elementIndex:int, setterName:string, setter:SetterFn) {\n    this._elementIndex = elementIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, bindElements:List) {\n    var element = bindElements[this._elementIndex];\n    this._setter(element, record.currentValue);\n  }\n}\n\nexport class DirectiveBindingMemento {\n  _elementInjectorIndex:int;\n  _directiveIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(\n      elementInjectorIndex:number,\n      directiveIndex:number,\n      setterName:string,\n      setter:SetterFn) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    var directive = elementInjector.getDirectiveAtIndex(this._directiveIndex);\n    this._setter(directive, record.currentValue);\n  }\n}\n\nvar _directiveMementos = MapWrapper.create();\n\nclass DirectiveMemento {\n  _elementInjectorIndex:number;\n  _directiveIndex:number;\n\n  constructor(elementInjectorIndex:number, directiveIndex:number) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n  }\n\n  static get(memento:DirectiveBindingMemento) {\n    var elementInjectorIndex = memento._elementInjectorIndex;\n    var directiveIndex = memento._directiveIndex;\n    var id = elementInjectorIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(_directiveMementos, id)) {\n      MapWrapper.set(_directiveMementos, id, new DirectiveMemento(elementInjectorIndex, directiveIndex));\n    }\n    return MapWrapper.get(_directiveMementos, id);\n  }\n\n  directive(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveAtIndex(this._directiveIndex);\n  }\n\n  directiveBinding(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveBindingAtIndex(this._directiveIndex);\n  }\n}\n\nclass PropertyUpdate {\n  currentValue;\n  previousValue;\n\n  constructor(currentValue, previousValue) {\n    this.currentValue = currentValue;\n    this.previousValue = previousValue;\n  }\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","assert.argumentTypes($__placeholder__0)","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","assert.type.$__placeholder__0)","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type($__placeholder__0, $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any","var $__placeholder__0 = $__placeholder__1","return assert.returnType(($__placeholder__0), $__placeholder__1)","void 0","assert.type.any","assert.genericType($__placeholder__0)"]}