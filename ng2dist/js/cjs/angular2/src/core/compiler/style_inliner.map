{"version":3,"sources":["style_inliner.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/2905","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/25"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/style_inliner.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/","sourcesContent":["import {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\n\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {\n  isBlank,\n  isPresent,\n  RegExp,\n  RegExpWrapper,\n  StringWrapper,\n  normalizeBlank,\n} from 'angular2/src/facade/lang';\nimport {\n  Promise,\n  PromiseWrapper,\n} from 'angular2/src/facade/async';\n\n/**\n * Inline @import rules in the given CSS.\n *\n * When an @import rules is inlined, it's url are rewritten.\n */\nexport class StyleInliner {\n  _xhr: XHR;\n  _urlResolver: UrlResolver;\n  _styleUrlResolver: StyleUrlResolver;\n\n  constructor(xhr: XHR, styleUrlResolver: StyleUrlResolver, urlResolver: UrlResolver) {\n    this._xhr = xhr;\n    this._urlResolver = urlResolver;\n    this._styleUrlResolver = styleUrlResolver;\n  }\n\n  /**\n   * Inline the @imports rules in the given CSS text.\n   *\n   * The baseUrl is required to rewrite URLs in the inlined content.\n   *\n   * @param {string} cssText\n   * @param {string} baseUrl\n   * @returns {*} a Promise<string> when @import rules are present, a string otherwise\n   */\n  // TODO(vicb): Union types: returns either a Promise<string> or a string\n  // TODO(vicb): commented out @import rules should not be inlined\n  inlineImports(cssText: string, baseUrl: string) {\n    return this._inlineImports(cssText, baseUrl, []);\n  }\n\n  _inlineImports(cssText: string, baseUrl: string, inlinedUrls: List<string>) {\n    var partIndex = 0;\n    var parts = StringWrapper.split(cssText, _importRe);\n\n    if (parts.length === 1) {\n      // no @import rule found, return the original css\n      return cssText;\n    }\n\n    var promises = [];\n\n    while (partIndex < parts.length - 1) {\n      // prefix is the content before the @import rule\n      var prefix = parts[partIndex];\n      // rule is the parameter of the @import rule\n      var rule = parts[partIndex + 1];\n      var url = _extractUrl(rule);\n      if (isPresent(url)) {\n        url = this._urlResolver.resolve(baseUrl, url);\n      }\n      var mediaQuery = _extractMediaQuery(rule);\n      var promise;\n\n      if (isBlank(url)) {\n        promise = PromiseWrapper.resolve(`/* Invalid import rule: \"@import ${rule};\" */`);\n      } else if (ListWrapper.contains(inlinedUrls, url)) {\n        // The current import rule has already been inlined, return the prefix only\n        // Importing again might cause a circular dependency\n        promise = PromiseWrapper.resolve(prefix);\n      } else {\n        ListWrapper.push(inlinedUrls, url);\n        promise = PromiseWrapper.then(\n          this._xhr.get(url),\n          (css) => {\n            // resolve nested @import rules\n            css = this._inlineImports(css, url, inlinedUrls);\n            if (PromiseWrapper.isPromise(css)) {\n              // wait until nested @import are inlined\n              return css.then((css) => {\n                return prefix + this._transformImportedCss(css, mediaQuery, url) + '\\n'\n              }) ;\n            } else {\n              // there are no nested @import, return the css\n              return prefix + this._transformImportedCss(css, mediaQuery, url) + '\\n';\n            }\n          },\n          (error) => `/* failed to import ${url} */\\n`\n        );\n      }\n      ListWrapper.push(promises, promise);\n      partIndex += 2;\n    }\n\n    return PromiseWrapper.all(promises).then(function (cssParts) {\n      var cssText = cssParts.join('');\n      if (partIndex < parts.length) {\n        // append then content located after the last @import rule\n        cssText += parts[partIndex];\n      }\n      return cssText;\n    });\n  }\n\n  _transformImportedCss(css: string, mediaQuery: string, url: string): string {\n    css = this._styleUrlResolver.resolveUrls(css, url);\n    return _wrapInMediaRule(css, mediaQuery);\n  }\n}\n\n// Extracts the url from an import rule, supported formats:\n// - 'url' / \"url\",\n// - url(url) / url('url') / url(\"url\")\nfunction _extractUrl(importRule: string): string {\n  var match = RegExpWrapper.firstMatch(_urlRe, importRule);\n  if (isBlank(match)) return null;\n  return isPresent(match[1]) ? match[1] : match[2];\n}\n\n// Extracts the media query from an import rule.\n// Returns null when there is no media query.\nfunction _extractMediaQuery(importRule: string): string {\n  var match = RegExpWrapper.firstMatch(_mediaQueryRe, importRule);\n  if (isBlank(match)) return null;\n  var mediaQuery = match[1].trim();\n  return (mediaQuery.length > 0) ? mediaQuery: null;\n}\n\n// Wraps the css in a media rule when the media query is not null\nfunction _wrapInMediaRule(css: string, query: string): string {\n  return (isBlank(query)) ? css : `@media ${query} {\\n${css}\\n}`;\n}\n\nvar _importRe = RegExpWrapper.create('@import\\\\s+([^;]+);');\nvar _urlRe = RegExpWrapper.create(\n  'url\\\\(\\\\s*?[\\'\"]?([^\\'\")]+)[\\'\"]?|' + // url(url) or url('url') or url(\"url\")\n  '[\\'\"]([^\\'\")]+)[\\'\"]'                 // \"url\" or 'url'\n);\nvar _mediaQueryRe = RegExpWrapper.create('[\\'\"][^\\'\"]+[\\'\"]\\\\s*\\\\)?\\\\s*(.*)');\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","assert.argumentTypes($__placeholder__0)","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","assert.type.$__placeholder__0)","void 0","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)"]}