{"version":3,"sources":["directive_parser.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/25","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;ACAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;iBCArC,EAAC,GAAE,YCAqB;AAAE,4BAAwB;IAAE,ADA9B,CAAC;AEAvB,WAAS,CCAT,EAAC,KAAI,CDAO,KAAG,ACAS,CAAC;CJAgC,CAAC;AKA1D,AAAI,EAAA,CAAA,YAAW,yDAAoB,CAAC;;;;;;;;;;;;;WCApC,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;APDtG,YAAQ;AAAG,UAAM;AAAG,gBAAY;AAAG,oBAAgB;AAAG,gBAAY;SOA1E,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;APAtG,OAAG;AAAG,aAAS;AAAG,mBAAe;EACjC,IAAE,EOFV,EAAC,+CAAoB,CAAA,OAAM,AAAC,gCAAkB,CACtC,CAAA,gDAAqB,yDAA2B,CAAA,gDAAqB,GAAK,EAAC,OAAM,+CAAmB,CAAC,AAD/D,CACgE;EPEtG,gBAAc,EOHtB,EAAC,sDAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,uDAAqB,gEAA2B,CAAA,uDAAqB,GAAK,EAAC,OAAM,sDAAmB,CAAC,AAD/D,CACgE;EPGtG,YAAU,EOJlB,EAAC,sDAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,uDAAqB,gEAA2B,CAAA,uDAAqB,GAAK,EAAC,OAAM,sDAAmB,CAAC,AAD/D,CACgE;EPKtG,kBAAgB,EONxB,EAAC,mEAAoB,CAAA,OAAM,AAAC,yBAAkB,CACtC,CAAA,oEAAqB,6EAA2B,CAAA,oEAAqB,GAAK,EAAC,OAAM,mEAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,4DAAoB,CAAA,OAAM,AAAC,iCAAkB,CACtC,CAAA,6DAAqB,sEAA2B,CAAA,6DAAqB,GAAK,EAAC,OAAM,4DAAmB,CAAC,AAD/D,CACgE;APMtG,YAAQ;AAAG,WAAO;EAClB,YAAU,EORlB,EAAC,yEAAoB,CAAA,OAAM,AAAC,kBAAkB,CACtC,CAAA,0EAAqB,mFAA2B,CAAA,0EAAqB,GAAK,EAAC,OAAM,yEAAmB,CAAC,AAD/D,CACgE;EPQtG,eAAa,EOTrB,EAAC,4EAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,6EAAqB,sFAA2B,CAAA,6EAAqB,GAAK,EAAC,OAAM,4EAAmB,CAAC,AAD/D,CACgE;EPStG,eAAa,EOVrB,EAAC,4EAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,6EAAqB,sFAA2B,CAAA,6EAAqB,GAAK,EAAC,OAAM,4EAAmB,CAAC,AAD/D,CACgE;EPWtG,kBAAgB,EOZxB,EAAC,sFAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,uFAAqB,gGAA2B,CAAA,uFAAqB,GAAK,EAAC,OAAM,sFAAmB,CAAC,AAD/D,CACgE;APWnD;AAE3D,AAAI,EAAA,CAAA,uBAAsB,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,iBAAgB,CAAC,CAAC;AQdrE,AAAI,EAAA,kBR+BG,SAAM,gBAAc,CAEb,UAAS,AAAwB,CAAG;ASjClD,OAAK,cAAc,YCAnB,CAAA,MAAK,YAAY,AViCQ,CAAA,IAAG,CAAE,kBAAgB,CAAC,AUjCX,CDAE,CAAA;ATkClC,AWlCJ,gBAAc,iBAAiB,AAAC,kBAAkB,KAAK,MAAmB,CXkC/D;AACP,AAAI,IAAA,CAAA,QAAO,CAAC;AAEZ,KAAG,iBAAiB,EAAI,IAAI,gBAAc,AAAC,EAAC,CAAC;AAC7C,MAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,UAAS,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACtC,AAAI,MAAA,CAAA,iBAAgB,EAAI,CAAA,UAAS,CAAE,CAAA,CAAC,CAAC;AACrC,WAAO,EAAE,CAAA,WAAU,MAAM,AAAC,CAAC,iBAAgB,WAAW,SAAS,CAAC,CAAC;AACjE,OAAG,iBAAiB,cAAc,AAAC,CAAC,QAAO,CAAG,kBAAgB,CAAC,CAAC;EAClE;AAAA,AACF,AQ3CsC,CAAA;AIAxC,AAAI,EAAA,mCAAoC,CAAA;ACAxC,AAAC,eAAc,YAAY,CAAC,AAAC,mBb6C3B,OAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe;AS7C9E,SAAK,cAAc,QT6CF,eAAa,UAAW,eAAa,UAAW,eAAa,CS7CxC,CAAA;AT8ClC,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,OAAM,MAAM,AAAC,EAAC,CAAC;AAC3B,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,UAAU,AAAC,EAAC,CAAC;AAEnC,AAAI,MAAA,CAAA,WAAU,EAAI,IAAI,YAAU,AAAC,EAAC,CAAC;AACnC,cAAU,WAAW,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC,CAAC;AACrD,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,SAAQ,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACvC,gBAAU,aAAa,AAAC,CAAC,SAAQ,CAAE,CAAA,CAAC,CAAC,CAAC;IACxC;AAAA,AACA,aAAS,QAAQ,AAAC,CAAC,KAAI,GAAG,SAAC,SAAQ,CAAG,CAAA,QAAO,CAAM;AACjD,SAAI,OAAM,AAAC,CAAC,OAAM,iBAAiB,CAAC,CAAA,EAClC,CAAA,SAAQ,AAAC,CAAC,OAAM,iBAAiB,CAAC,CAAA,EAAK,EAAC,UAAS,SAAS,AAAC,CAAC,OAAM,iBAAiB,CAAG,SAAO,CAAC,CAAG;AACjG,kBAAU,aAAa,AAAC,CAAC,QAAO,CAAG,UAAQ,CAAC,CAAC;MAC/C;AAAA,IACF,EAAC,CAAC;AACF,OAAI,SAAQ,AAAC,CAAC,OAAM,iBAAiB,CAAC,CAAG;AACvC,eAAS,QAAQ,AAAC,CAAC,OAAM,iBAAiB,GAAG,SAAC,UAAS,CAAG,CAAA,IAAG,CAAM;AACjE,kBAAU,aAAa,AAAC,CAAC,IAAG,CAAG,CAAA,UAAS,OAAO,CAAC,CAAC;MACnD,EAAC,CAAC;IACJ;AAAA,AACA,OAAI,SAAQ,AAAC,CAAC,OAAM,iBAAiB,CAAC,CAAG;AACvC,eAAS,QAAQ,AAAC,CAAC,OAAM,iBAAiB,GAAG,SAAC,KAAI,CAAG,CAAA,IAAG,CAAM;AAC5D,kBAAU,aAAa,AAAC,CAAC,IAAG,CAAG,MAAI,CAAC,CAAC;MACvC,EAAC,CAAC;IACJ;AAAA,AAGI,MAAA,CAAA,iBAAgB,EAAI,CAAA,GAAE,kBAAkB,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC;AAC9D,AAAI,MAAA,CAAA,iBAAgB,CAAC;AAErB,OAAG,iBAAiB,MAAM,AAAC,CAAC,WAAU,GAAG,SAAC,QAAO,CAAG,CAAA,SAAQ,CAAM;AAChE,sBAAgB,EAAI,CAAA,uBAAsB,AAAC,CAAC,iBAAgB,CAAG,SAAO,CAAG,UAAQ,CAAC,CAAC;AACnF,2BAAqB,AAAC,CAAC,SAAQ,CAAG,QAAM,CAAG,kBAAgB,CAAC,CAAC;AAC7D,YAAM,aAAa,AAAC,CAAC,SAAQ,CAAC,CAAC;IACjC,EAAC,CAAC;AAGF,yBAAqB,AAAC,CAAC,OAAM,CAAG,kBAAgB,CAAG,kBAAgB,CAAC,CAAC;EACvE,MApDmC,YAAU,Ca9BS;ACDxD,KAAK,eAAe,AAAC,+BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YJD1B,MAAK,YAAY,AViCQ,CAAA,IAAG,CAAE,kBAAgB,CAAC,AUjCX,GICa;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,iDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,Yd4CT,cAAa,IAAW,cAAa,IAAW,cAAa,Gc5C7B;EAAC,CAAC,CAAC,CAAC;AduFrD,OAAS,wBAAsB,CAAE,iBAAgB,CAAG,CAAA,QAAO,CAAG,CAAA,SAAQ;AACpE,KAAI,iBAAgB,AAAC,EAAC,CAAG;AACvB,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,QAAO,MAAM,CAAC;AAC1B,OAAI,CAAC,SAAQ,AAAC,CAAC,iBAAgB,CAAC,CAAG;AACjC,sBAAgB,EAAI,CAAA,gBAAe,OAAO,AAAC,EAAC,CAAC;IAC/C;AAAA,AACA,OAAI,SAAQ,AAAC,CAAC,KAAI,CAAC,CAAG;AACpB,UAAS,GAAA,CAAA,GAAE,EAAI,EAAA,CAAG,CAAA,GAAE,EAAE,CAAA,KAAI,OAAO,CAAG,CAAA,GAAE,GAAG,EAAA,CAAG;AAE1C,uBAAe,IAAI,AAAC,CAAC,iBAAgB,CAAG,CAAA,KAAI,CAAE,GAAE,CAAC,CAAG,KAAG,CAAC,CAAC;MAC3D;AAAA,IACF;AAAA,AAEA,OAAI,SAAQ,AAAC,CAAC,SAAQ,WAAW,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,SAAQ,WAAW,KAAK,CAAC,CAAG;AAC3E,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,SAAQ,WAAW,KAAK,CAAC;AACvC,qBAAe,QAAQ,AAAC,CAAC,OAAM,GAAG,SAAC,KAAI,CAAG,CAAA,GAAE,CAAM;AAKhD,AAAI,UAAA,CAAA,QAAO,EAAI,CAAA,aAAY,WAAW,AAAC,CAAC,uBAAsB,CAAG,MAAI,CAAC,CAAC;AACvE,WAAI,SAAQ,AAAC,CAAC,QAAO,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,QAAO,CAAE,CAAA,CAAC,CAAC,CAAG;AACjD,yBAAe,IAAI,AAAC,CAAC,iBAAgB,CAAG,CAAA,QAAO,CAAE,CAAA,CAAC,CAAG,KAAG,CAAC,CAAC;QAC5D;AAAA,MACF,EAAC,CAAC;IACJ;AAAA,EACF;AAAA,AACA,OAAO,kBAAgB,CAAC;AAC1B;AAGA,OAAS,uBAAqB,CAAE,SAAQ,CAAG,CAAA,OAAM,CAAG,CAAA,iBAAgB,CAAG;AACrE,KAAI,SAAQ,WAAW,WAAa,SAAO,CAAG;AAC5C,OAAI,CAAC,iBAAgB,CAAG;AACtB,UAAM,IAAI,cAAY,AAAC,CAAC,2EAA0E,IAC/F,kCAAkC,EAAC,CAAA,OAAM,mBAAmB,CAAE,CAAC,CAAC;IACrE,KAAO,KAAI,SAAQ,AAAC,CAAC,OAAM,kBAAkB,CAAC,CAAG;AAC/C,UAAM,IAAI,cAAY,AAAC,EAAC,8DAA8D,EAAC,CAAA,OAAM,mBAAmB,EAAG,CAAC;IACtH;AAAA,EACF,KAAO,KAAI,iBAAgB,CAAG;AAC5B,QAAM,IAAI,cAAY,AAAC,EAAC,oEAAoE,EAAC,CAAA,OAAM,mBAAmB,EAAG,CAAC;EAC5H,KAAO,KAAI,CAAC,SAAQ,WAAW,WAAa,UAAQ,CAAC,GAAK,CAAA,SAAQ,AAAC,CAAC,OAAM,mBAAmB,CAAC,CAAG;AAC/F,QAAM,IAAI,cAAY,AAAC,EAAC,wEAAwE,EAAC,CAAA,OAAM,mBAAmB,EAAG,CAAC;EAChI;AAAA,AACF;AAAA,AAGA,OAAS,uBAAqB,CAAE,OAAM,CAAG,CAAA,iBAAgB,CAAG,CAAA,iBAAgB;AAC1E,KAAI,iBAAgB,AAAC,EAAC,CAAG;AACvB,AAAI,MAAA,CAAA,UAAS,EAAE,CAAA,OAAM,iBAAiB,CAAC;AACvC,OAAI,SAAQ,AAAC,CAAC,UAAS,CAAC,CAAG;AAEzB,eAAS,QAAQ,AAAC,CAAC,UAAS,GAAG,SAAC,UAAS,CAAG,CAAA,IAAG,CAAM;AACnD,WAAI,CAAC,GAAE,YAAY,AAAC,CAAC,OAAM,QAAQ,CAAG,KAAG,CAAC,CAAA,EAAK,EAAC,iBAAgB,AAAC,CAAC,IAAG,CAAC,CAAG;AACvE,aAAI,CAAC,SAAQ,AAAC,CAAC,iBAAgB,CAAC,CAAA,EAAK,EAAC,SAAQ,AAAC,CAAC,gBAAe,IAAI,AAAC,CAAC,iBAAgB,CAAG,KAAG,CAAC,CAAC,CAAG;AAC9F,gBAAM,IAAI,cAAY,AAAC,EAAC,+BAA+B,EAAC,KAAG,EAAC,QAAO,EAAC,CAAA,OAAM,mBAAmB,EAAG,CAAC;UACnG;AAAA,QACF;AAAA,MACF,EAAC,CAAC;IACJ;AAAA,AAGA,OAAI,iBAAgB,GAAK,EAAC,OAAM,WAAW,CAAA,EAAK,EAAC,SAAQ,AAAC,CAAC,OAAM,kBAAkB,CAAC,CAAG;AACrF,UAAM,IAAI,cAAY,AAAC,EAAC,+BAA+B,EAAC,CAAA,OAAM,mBAAmB,EAAG,CAAC;IACvF;AAAA,EACF;AAAA,AACF;AACA","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/pipeline/directive_parser.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/src/core/compiler/pipeline/","sourcesContent":["import {isPresent, isBlank, BaseException, assertionsEnabled, RegExpWrapper} from 'angular2/src/facade/lang';\nimport {List, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {SelectorMatcher} from '../selector';\nimport {CssSelector} from '../selector';\n\nimport {DirectiveMetadata} from '../directive_metadata';\nimport {Component, Viewport} from '../../annotations/annotations';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\nimport {isSpecialProperty} from './element_binder_builder';;\n\nvar PROPERTY_BINDING_REGEXP = RegExpWrapper.create('^ *([^\\\\s\\\\|]+)');\n\n/**\n * Parses the directives on a single element. Assumes ViewSplitter has already created\n * <template> elements for template directives.\n *\n * Fills:\n * - CompileElement#decoratorDirectives\n * - CompileElement#templateDirecitve\n * - CompileElement#componentDirective.\n *\n * Reads:\n * - CompileElement#propertyBindings (to find directives contained\n *   in the property bindings)\n * - CompileElement#variableBindings (to find directives contained\n *   in the variable bindings)\n */\nexport class DirectiveParser extends CompileStep {\n  _selectorMatcher:SelectorMatcher;\n  constructor(directives:List<DirectiveMetadata>) {\n    super();\n    var selector;\n\n    this._selectorMatcher = new SelectorMatcher();\n    for (var i=0; i<directives.length; i++) {\n      var directiveMetadata = directives[i];\n      selector=CssSelector.parse(directiveMetadata.annotation.selector);\n      this._selectorMatcher.addSelectable(selector, directiveMetadata);\n    }\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attrs = current.attrs();\n    var classList = current.classList();\n\n    var cssSelector = new CssSelector();\n    cssSelector.setElement(DOM.nodeName(current.element));\n    for (var i=0; i < classList.length; i++) {\n      cssSelector.addClassName(classList[i]);\n    }\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      if (isBlank(current.propertyBindings) ||\n        isPresent(current.propertyBindings) && !MapWrapper.contains(current.propertyBindings, attrName)) {\n        cssSelector.addAttribute(attrName, attrValue);\n      }\n    });\n    if (isPresent(current.propertyBindings)) {\n      MapWrapper.forEach(current.propertyBindings, (expression, prop) => {\n        cssSelector.addAttribute(prop, expression.source);\n      });\n    }\n    if (isPresent(current.variableBindings)) {\n      MapWrapper.forEach(current.variableBindings, (value, name) => {\n        cssSelector.addAttribute(name, value);\n      });\n    }\n    // Note: We assume that the ViewSplitter already did its work, i.e. template directive should\n    // only be present on <template> elements any more!\n    var isTemplateElement = DOM.isTemplateElement(current.element);\n    var matchedProperties; // StringMap - used in dev mode to store all properties that have been matched\n    \n    this._selectorMatcher.match(cssSelector, (selector, directive) => {\n      matchedProperties = updateMatchedProperties(matchedProperties, selector, directive);\n      checkDirectiveValidity(directive, current, isTemplateElement);\n      current.addDirective(directive);\n    });\n\n    // raise error if some directives are missing\n    checkMissingDirectives(current, matchedProperties, isTemplateElement);\n  }\n}\n\n// calculate all the properties that are used or interpreted by all directives\n// those properties correspond to the directive selectors and the directive bindings\nfunction updateMatchedProperties(matchedProperties, selector, directive) {\n  if (assertionsEnabled()) {\n    var attrs = selector.attrs;\n    if (!isPresent(matchedProperties)) {\n      matchedProperties = StringMapWrapper.create();\n    }\n    if (isPresent(attrs)) {\n      for (var idx = 0; idx<attrs.length; idx+=2) {\n        // attribute name is stored on even indexes\n        StringMapWrapper.set(matchedProperties, attrs[idx], true);\n      }\n    }\n    // some properties can be used by the directive, so we need to register them\n    if (isPresent(directive.annotation) && isPresent(directive.annotation.bind)) {\n      var bindMap = directive.annotation.bind;\n      StringMapWrapper.forEach(bindMap, (value, key) => {\n        // value is the name of the property that is intepreted\n        // e.g. 'myprop' or 'myprop | double' when a pipe is used to transform the property\n\n        // keep the property name and remove the pipe\n        var bindProp = RegExpWrapper.firstMatch(PROPERTY_BINDING_REGEXP, value);\n        if (isPresent(bindProp) && isPresent(bindProp[1])) {\n          StringMapWrapper.set(matchedProperties, bindProp[1], true);\n        }\n      });\n    }\n  }\n  return matchedProperties;\n}\n\n// check if the directive is compatible with the current element\nfunction checkDirectiveValidity(directive, current, isTemplateElement) {\n  if (directive.annotation instanceof Viewport) {\n    if (!isTemplateElement) {\n      throw new BaseException(`Viewport directives need to be placed on <template> elements or elements ` +\n         `with template attribute - check ${current.elementDescription}`);\n    } else if (isPresent(current.viewportDirective)) {\n      throw new BaseException(`Only one viewport directive can be used per element - check ${current.elementDescription}`);\n    }\n  } else if (isTemplateElement) {\n    throw new BaseException(`Only template directives are allowed on template elements - check ${current.elementDescription}`);\n  } else if ((directive.annotation instanceof Component) && isPresent(current.componentDirective)) {\n    throw new BaseException(`Multiple component directives not allowed on the same element - check ${current.elementDescription}`);\n  }\n}\n\n// validates that there is no missing directive - dev mode only\nfunction checkMissingDirectives(current, matchedProperties, isTemplateElement) {\n  if (assertionsEnabled()) {\n    var ppBindings=current.propertyBindings;\n    if (isPresent(ppBindings)) {\n      // check that each property corresponds to a real property or has been matched by a directive\n      MapWrapper.forEach(ppBindings, (expression, prop) => {\n        if (!DOM.hasProperty(current.element, prop) && !isSpecialProperty(prop)) {\n          if (!isPresent(matchedProperties) || !isPresent(StringMapWrapper.get(matchedProperties, prop))) {\n            throw new BaseException(`Missing directive to handle '${prop}' in ${current.elementDescription}`);\n          } \n        }\n      });\n    }\n    // template only store directives as attribute when they are not bound to expressions\n    // so we have to validate the expression case too (e.g. !if=\"condition\")\n    if (isTemplateElement && !current.isViewRoot && !isPresent(current.viewportDirective)) {\n      throw new BaseException(`Missing directive to handle: ${current.elementDescription}`);\n    }\n  }\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}