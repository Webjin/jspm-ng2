{"version":3,"sources":["key_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/di/key_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/di/","sourcesContent":["import {describe, iit, it, expect, beforeEach} from 'angular2/test_lib';\nimport {Key, KeyRegistry} from 'angular2/di';\n\nexport function main() {\n  describe(\"key\", function () {\n    var registry;\n\n    beforeEach(function () {\n      registry = new KeyRegistry();\n    });\n\n    it('should be equal to another key if type is the same', function () {\n      expect(registry.get('car')).toBe(registry.get('car'));\n    });\n\n    it('should not be equal to another key if types are different', function () {\n      expect(registry.get('car')).not.toBe(registry.get('porsche'));\n    });\n\n    it('should return the passed in key', function () {\n      expect(registry.get(registry.get('car'))).toBe(registry.get('car'));\n    });\n\n    describe(\"metadata\", function () {\n      it(\"should assign metadata to a key\", function () {\n        var key = registry.get('car');\n\n        Key.setMetadata(key, \"meta\");\n\n        expect(key.metadata).toEqual(\"meta\");\n      });\n\n      it(\"should allow assigning the same metadata twice\", function () {\n        var key = registry.get('car');\n\n        Key.setMetadata(key, \"meta\");\n        Key.setMetadata(key, \"meta\");\n\n        expect(key.metadata).toEqual(\"meta\");\n      });\n\n      it(\"should throw when assigning different metadata\", function () {\n        var key = registry.get('car');\n\n        Key.setMetadata(key, \"meta1\");\n\n        expect(() => Key.setMetadata(key, \"meta2\")).toThrowError();\n      });\n    });\n  });\n}","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})"]}