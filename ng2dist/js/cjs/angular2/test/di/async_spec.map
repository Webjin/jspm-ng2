{"version":3,"sources":["async_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/di/async_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/di/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach} from 'angular2/test_lib';\nimport {Injector, Inject, InjectPromise, bind, Key} from 'angular2/di';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\n\nclass UserList {\n}\n\nfunction fetchUsers() {\n  return PromiseWrapper.resolve(new UserList());\n}\n\nclass SynchronousUserList {\n}\n\nclass UserController {\n  list:UserList;\n  constructor(list:UserList) {\n    this.list = list;\n  }\n}\n\nclass AsyncUserController {\n  userList;\n  constructor(@InjectPromise(UserList) userList) {\n    this.userList = userList;\n  }\n}\n\nexport function main() {\n  describe(\"async injection\", function () {\n\n    describe(\"asyncGet\", function () {\n      it('should return a promise', function () {\n        var injector = new Injector([\n          bind(UserList).toAsyncFactory(fetchUsers)\n        ]);\n        var p = injector.asyncGet(UserList);\n        expect(p).toBePromise();\n      });\n\n      it('should return a promise when the binding is sync', function () {\n        var injector = new Injector([\n          SynchronousUserList\n        ]);\n        var p = injector.asyncGet(SynchronousUserList);\n        expect(p).toBePromise();\n      });\n\n      it(\"should return a promise when the binding is sync (from cache)\", function () {\n        var injector = new Injector([\n          UserList\n        ]);\n        expect(injector.get(UserList)).toBeAnInstanceOf(UserList);\n        expect(injector.asyncGet(UserList)).toBePromise();\n      });\n\n      it('should return the injector', function (done) {\n        var injector = new Injector([]);\n        var p = injector.asyncGet(Injector);\n        p.then(function (injector) {\n          expect(injector).toBe(injector);\n          done();\n        });\n      });\n\n      it('should return a promise when instantiating a sync binding ' +\n      'with an async dependency', function (done) {\n        var injector = new Injector([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          UserController\n        ]);\n\n        injector.asyncGet(UserController).then(function (userController) {\n          expect(userController).toBeAnInstanceOf(UserController);\n          expect(userController.list).toBeAnInstanceOf(UserList);\n          done();\n        });\n      });\n\n      it(\"should create only one instance (async + async)\", function (done) {\n        var injector = new Injector([\n          bind(UserList).toAsyncFactory(fetchUsers)\n        ]);\n\n        var ul1 = injector.asyncGet(UserList);\n        var ul2 = injector.asyncGet(UserList);\n\n        PromiseWrapper.all([ul1, ul2]).then(function (uls) {\n          expect(uls[0]).toBe(uls[1]);\n          done();\n        });\n      });\n\n      it(\"should create only one instance (sync + async)\", function (done) {\n        var injector = new Injector([\n          UserList\n        ]);\n\n        var promise = injector.asyncGet(UserList);\n        var ul = injector.get(UserList);\n\n        expect(promise).toBePromise();\n        expect(ul).toBeAnInstanceOf(UserList);\n\n        promise.then(function (ful) {\n          expect(ful).toBe(ul);\n          done();\n        });\n      });\n\n      it('should show the full path when error happens in a constructor', function (done) {\n        var injector = new Injector([\n          UserController,\n          bind(UserList).toAsyncFactory(function () {\n            throw \"Broken UserList\";\n          })\n        ]);\n\n        var promise = injector.asyncGet(UserController);\n        PromiseWrapper.then(promise, null, function (e) {\n          expect(e.message).toContain(\"Error during instantiation of UserList! (UserController -> UserList)\");\n          done();\n        });\n      });\n    });\n\n    describe(\"get\", function () {\n      it('should throw when instantiating an async binding', function () {\n        var injector = new Injector([\n          bind(UserList).toAsyncFactory(fetchUsers)\n        ]);\n\n        expect(() => injector.get(UserList))\n          .toThrowError('Cannot instantiate UserList synchronously. It is provided as a promise!');\n      });\n\n      it('should throw when instantiating a sync binding with an dependency', function () {\n        var injector = new Injector([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          UserController\n        ]);\n\n        expect(() => injector.get(UserController))\n          .toThrowError('Cannot instantiate UserList synchronously. It is provided as a promise! (UserController -> UserList)');\n      });\n\n      it('should resolve synchronously when an async dependency requested as a promise', function () {\n        var injector = new Injector([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          AsyncUserController\n        ]);\n        var controller = injector.get(AsyncUserController);\n\n        expect(controller).toBeAnInstanceOf(AsyncUserController);\n        expect(controller.userList).toBePromise();\n      });\n\n      it('should wrap sync dependencies into promises if required', function () {\n        var injector = new Injector([\n          bind(UserList).toFactory(() => new UserList()),\n          AsyncUserController\n        ]);\n        var controller = injector.get(AsyncUserController);\n\n        expect(controller).toBeAnInstanceOf(AsyncUserController);\n        expect(controller.userList).toBePromise();\n      });\n    });\n  });\n}","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}