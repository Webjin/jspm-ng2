{"version":3,"sources":["view_splitter_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/core/compiler/pipeline/view_splitter_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ViewSplitter} from 'angular2/src/core/compiler/pipeline/view_splitter';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Lexer, Parser} from 'angular2/change_detection';\n\nexport function main() {\n  describe('ViewSplitter', () => {\n\n    function createPipeline() {\n      return new CompilePipeline([new ViewSplitter(new Parser(new Lexer()))]);\n    }\n\n    it('should mark root elements as viewRoot', () => {\n      var rootElement = el('<div></div>');\n      var results = createPipeline().process(rootElement);\n      expect(results[0].isViewRoot).toBe(true);\n    });\n\n    describe('<template> elements', () => {\n\n      it('should move the content into a new <template> element and mark that as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n\n        expect(DOM.getOuterHTML(results[1].element)).toEqual('<template if=\"true\"></template>');\n        expect(results[1].isViewRoot).toBe(false);\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<template>a</template>');\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should not wrap a root <template> element', () => {\n        var rootElement = el('<div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toBe(1);\n        expect(DOM.getOuterHTML(rootElement)).toEqual('<div></div>');\n      });\n\n    });\n\n    describe('elements with template attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span template=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div template></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should work with top-level template node', () => {\n        var rootElement = DOM.createTemplate('<div template>x</div>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"prop:expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div template=\"varname\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div template></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n    });\n\n    describe('elements with *directive_name attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span *if></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template if=\"\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span *if=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div *foo=\"bar\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should work with top-level template node', () => {\n        var rootElement = DOM.createTemplate('<div *foo>x</div>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template foo=\"\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div *prop=\"expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div *foreach=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div *varname></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div *foo></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n      it('should not allow multiple template directives on the same element', () => {\n        expect( () => {\n          var rootElement = el('<div><div *foo *bar=\"blah\"></div></div>');\n          createPipeline().process(rootElement);\n        }).toThrowError('Only one template directive per element is allowed: foo and bar cannot be used simultaneously in <div *foo *bar=\"blah\">');\n      });\n\n      it('should not allow template and star directives on the same element', () => {\n        expect( () => {\n          var rootElement = el('<div><div *foo template=\"bar\"></div></div>');\n          createPipeline().process(rootElement);\n        }).toThrowError('Only one template directive per element is allowed: bar and foo cannot be used simultaneously in <div *foo template=\"bar\">');\n      });\n\n    });\n\n  });\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})"]}