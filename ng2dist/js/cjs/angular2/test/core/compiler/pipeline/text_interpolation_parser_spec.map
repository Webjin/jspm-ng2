{"version":3,"sources":["text_interpolation_parser_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/core/compiler/pipeline/text_interpolation_parser_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/core/compiler/pipeline/","sourcesContent":["import {describe, beforeEach, expect, it, iit, ddescribe, el} from 'angular2/test_lib';\nimport {TextInterpolationParser} from 'angular2/src/core/compiler/pipeline/text_interpolation_parser';\nimport {CompilePipeline} from 'angular2/src/core/compiler/pipeline/compile_pipeline';\nimport {MapWrapper} from 'angular2/src/facade/collection';\nimport {Lexer, Parser} from 'angular2/change_detection';\nimport {CompileElement} from 'angular2/src/core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'angular2/src/core/compiler/pipeline/compile_step'\nimport {CompileControl} from 'angular2/src/core/compiler/pipeline/compile_control';\nimport {IgnoreChildrenStep} from './pipeline_spec';\n\nexport function main() {\n  describe('TextInterpolationParser', () => {\n    function createPipeline(ignoreBindings = false) {\n      return new CompilePipeline([\n        new MockStep((parent, current, control) => { current.ignoreBindings = ignoreBindings; }),\n        new IgnoreChildrenStep(),\n        new TextInterpolationParser(new Parser(new Lexer()))\n      ]);\n    }\n\n    it('should not look for text interpolation when ignoreBindings is true', () => {\n      var results = createPipeline(true).process(el('<div>{{expr1}}<span></span>{{expr2}}</div>'));\n      expect(results[0].textNodeBindings).toBe(null);\n    });\n\n    it('should find text interpolation in normal elements', () => {\n      var results = createPipeline().process(el('<div>{{expr1}}<span></span>{{expr2}}</div>'));\n      var bindings = results[0].textNodeBindings;\n      expect(MapWrapper.get(bindings, 0).source).toEqual(\"{{expr1}}\");\n      expect(MapWrapper.get(bindings, 2).source).toEqual(\"{{expr2}}\");\n    });\n\n    it('should find text interpolation in template elements', () => {\n      var results = createPipeline().process(el('<template>{{expr1}}<span></span>{{expr2}}</template>'));\n      var bindings = results[0].textNodeBindings;\n      expect(MapWrapper.get(bindings, 0).source).toEqual(\"{{expr1}}\");\n      expect(MapWrapper.get(bindings, 2).source).toEqual(\"{{expr2}}\");\n    });\n\n    it('should allow multiple expressions', () => {\n      var results = createPipeline().process(el('<div>{{expr1}}{{expr2}}</div>'));\n      var bindings = results[0].textNodeBindings;\n      expect(MapWrapper.get(bindings, 0).source).toEqual(\"{{expr1}}{{expr2}}\");\n    });\n\n    it('should not interpolate when compileChildren is false', () => {\n      var results = createPipeline().process(el('<div>{{included}}<span ignore-children>{{excluded}}</span></div>'));\n      var bindings = results[0].textNodeBindings;\n      expect(MapWrapper.get(bindings, 0).source).toEqual(\"{{included}}\");\n      expect(results[1].textNodeBindings).toBe(null);\n    });\n\n    it('should allow fixed text before, in between and after expressions', () => {\n      var results = createPipeline().process(el('<div>a{{expr1}}b{{expr2}}c</div>'));\n      var bindings = results[0].textNodeBindings;\n      expect(MapWrapper.get(bindings, 0).source).toEqual(\"a{{expr1}}b{{expr2}}c\");\n    });\n\n    it('should escape quotes in fixed parts', () => {\n      var results = createPipeline().process(el(\"<div>'\\\"a{{expr1}}</div>\"));\n      expect(MapWrapper.get(results[0].textNodeBindings, 0).source).toEqual(\"'\\\"a{{expr1}}\");\n    });\n  });\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}