{"version":3,"sources":["model_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/forms/model_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/forms/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, el} from 'angular2/test_lib';\nimport {ControlGroup, Control, OptionalControl} from 'angular2/forms';\nimport * as validations from 'angular2/forms';\n\nexport function main() {\n  describe(\"Form Model\", () => {\n    describe(\"Control\", () => {\n      describe(\"validator\", () => {\n        it(\"should run validator with the initial value\", () => {\n          var c = new Control(\"value\", validations.required);\n          expect(c.valid).toEqual(true);\n        });\n\n        it(\"should rerun the validator when the value changes\", () => {\n          var c = new Control(\"value\", validations.required);\n          c.updateValue(null);\n          expect(c.valid).toEqual(false);\n        });\n\n        it(\"should return errors\", () => {\n          var c = new Control(null, validations.required);\n          expect(c.errors).toEqual({\"required\" : true});\n        });\n      });\n    });\n\n    describe(\"ControlGroup\", () => {\n      describe(\"value\", () => {\n        it(\"should be the reduced value of the child controls\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control(\"111\"),\n            \"two\": new Control(\"222\")\n          });\n          expect(g.value).toEqual({\"one\": \"111\", \"two\": \"222\"});\n        });\n\n        it(\"should be empty when there are no child controls\", () => {\n          var g = new ControlGroup({});\n          expect(g.value).toEqual({});\n        });\n\n        it(\"should support nested groups\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control(\"111\"),\n            \"nested\": new ControlGroup({\n              \"two\" : new Control(\"222\")\n            })\n          });\n          expect(g.value).toEqual({\"one\": \"111\", \"nested\" : {\"two\": \"222\"}});\n\n          g.controls[\"nested\"].controls[\"two\"].updateValue(\"333\");\n\n          expect(g.value).toEqual({\"one\": \"111\", \"nested\" : {\"two\": \"333\"}});\n        });\n      });\n\n      describe(\"validator\", () => {\n        it(\"should run the validator with the initial value (valid)\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control('value', validations.required)\n          });\n\n          expect(g.valid).toEqual(true);\n\n          expect(g.errors).toEqual(null);\n        });\n\n        it(\"should run the validator with the initial value (invalid)\", () => {\n          var one = new Control(null, validations.required);\n          var g = new ControlGroup({\"one\": one});\n\n          expect(g.valid).toEqual(false);\n\n          expect(g.errors).toEqual({\"required\": [one]});\n        });\n\n        it(\"should run the validator with the value changes\", () => {\n          var c = new Control(null, validations.required);\n          var g = new ControlGroup({\"one\": c});\n\n          c.updateValue(\"some value\");\n\n          expect(g.valid).toEqual(true);\n          expect(g.errors).toEqual(null);\n        });\n      });\n\n      describe(\"optional components\", () => {\n        describe(\"contains\", () => {\n          var group;\n\n          beforeEach(() => {\n            group = new ControlGroup({\n              \"required\": new Control(\"requiredValue\"),\n              \"optional\": new Control(\"optionalValue\")\n            }, {\n              \"optional\": false\n            });\n          });\n\n          // rename contains into has\n          it(\"should return false when the component is not included\", () => {\n            expect(group.contains(\"optional\")).toEqual(false);\n          })\n\n          it(\"should return false when there is no component with the given name\", () => {\n            expect(group.contains(\"something else\")).toEqual(false);\n          });\n\n          it(\"should return true when the component is included\", () => {\n            expect(group.contains(\"required\")).toEqual(true);\n\n            group.include(\"optional\");\n\n            expect(group.contains(\"optional\")).toEqual(true);\n          });\n        });\n\n        it(\"should not include an inactive component into the group value\", () => {\n          var group = new ControlGroup({\n            \"required\": new Control(\"requiredValue\"),\n            \"optional\": new Control(\"optionalValue\")\n          }, {\n            \"optional\": false\n          });\n\n          expect(group.value).toEqual({\"required\" : \"requiredValue\"});\n\n          group.include(\"optional\");\n\n          expect(group.value).toEqual({\"required\" : \"requiredValue\", \"optional\" : \"optionalValue\"});\n        });\n\n        it(\"should not run validations on an inactive component\", () => {\n          var group = new ControlGroup({\n            \"required\": new Control(\"requiredValue\", validations.required),\n            \"optional\": new Control(\"\", validations.required)\n          }, {\n            \"optional\": false\n          });\n\n          expect(group.valid).toEqual(true);\n\n          group.include(\"optional\");\n\n          expect(group.valid).toEqual(false);\n        });\n      });\n    });\n  });\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})"]}