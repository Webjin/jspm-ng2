{"version":3,"sources":["validators_spec.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/forms/validators_spec.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/angular2/test/forms/","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, el} from 'angular2/test_lib';\nimport {ControlGroup, Control, required, compose, controlGroupValidator, nullValidator} from 'angular2/forms';\n\nexport function main() {\n  function validator(key:string, error:any){\n    return function(c:Control) {\n      var r = {};\n      r[key] = error;\n      return r;\n    }\n  }\n\n  describe(\"Validators\", () => {\n    describe(\"required\", () => {\n      it(\"should error on an empty string\", () => {\n        expect(required(new Control(\"\"))).toEqual({\"required\" : true});\n      });\n\n      it(\"should error on null\", () => {\n        expect(required(new Control(null))).toEqual({\"required\" : true});\n      });\n\n      it(\"should not error on a non-empty string\", () => {\n        expect(required(new Control(\"not empty\"))).toEqual(null);\n      });\n    });\n\n    describe(\"compose\", () => {\n      it(\"should collect errors from all the validators\", () => {\n        var c = compose([validator(\"a\", true), validator(\"b\", true)]);\n        expect(c(new Control(\"\"))).toEqual({\"a\" : true, \"b\" : true});\n      });\n\n      it(\"should run validators left to right\", () => {\n        var c = compose([validator(\"a\", 1), validator(\"a\", 2)]);\n        expect(c(new Control(\"\"))).toEqual({\"a\" : 2});\n      });\n\n      it(\"should return null when no errors\", () => {\n        var c = compose([nullValidator, nullValidator]);\n        expect(c(new Control(\"\"))).toEqual(null);\n      });\n    });\n\n    describe(\"controlGroupValidator\", () => {\n      it(\"should collect errors from the child controls\", () => {\n        var one = new Control(\"one\", validator(\"a\", true));\n        var two = new Control(\"one\", validator(\"b\", true));\n        var g = new ControlGroup({\"one\" : one, \"two\" : two});\n\n        expect(controlGroupValidator(g)).toEqual({\n          \"a\" : [one],\n          \"b\" : [two]\n        });\n      });\n\n      it(\"should not include controls that have no errors\", () => {\n        var one = new Control(\"one\", validator(\"a\", true));\n        var two = new Control(\"two\");\n        var g = new ControlGroup({\"one\" : one, \"two\" : two});\n\n        expect(controlGroupValidator(g)).toEqual({\n          \"a\": [one]\n        });\n      });\n\n      it(\"should return null when no errors\", () => {\n        var g = new ControlGroup({\n          \"one\" : new Control(\"one\")\n        });\n\n        expect(controlGroupValidator(g)).toEqual(null);\n      });\n    });\n  });\n}","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}