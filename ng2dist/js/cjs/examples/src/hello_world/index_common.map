{"version":3,"sources":["index_common.js","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/19","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"AAAA;ACAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;MCArC,EAAC,GAAE,YCAqB;AAAE,iBAAwB;IAAE,ADA9B,CAAC;AEAvB,WAAS,CCAT,EAAC,KAAI,CDAO,KAAG,ACAS,CAAC;CJAgC,CAAC;AKA1D,AAAI,EAAA,CAAA,YAAW,0CAAoB,CAAC;;;WCApC,EAAC,uCAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,wCAAqB,iDAA2B,CAAA,wCAAqB,GAAK,EAAC,OAAM,uCAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,2BAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,4BAAqB,qCAA2B,CAAA,4BAAqB,GAAK,EAAC,OAAM,2BAAmB,CAAC,AAD/D,CACgE;APDtG,YAAQ;AAAG,YAAQ;AAAG,YAAQ;AAAG,WAAO;AAAG,YAAQ;AQA3D,AAAI,EAAA,WR+BJ,SAAM,SAAO,CAEC,OAAM,AAAiB,CAAG;ASjCxC,OAAK,cAAc,STiCI,gBAAc,CSjCC,CAAA;ATkClC,KAAG,SAAS,EAAI,CAAA,OAAM,SAAS,CAAC;AAClC,AQnCsC,CAAA;AEAxC,AAAC,eAAc,YAAY,CAAC,AAAC,YVoC3B,cAAa,CAAb,UAAe,AAAD,CAAG;AACf,OAAG,SAAS,EAAI,QAAM,CAAC;EACzB,MUtCmF;ACArF,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cXSzB,UAAQ,AAAC,CAAC;AAIT,aAAO,CAAG,YAAU;AAGpB,sBAAgB,CAAG,EAAC,eAAc,CAAC;AAAA,IACrC,CAAC,KAEA,SAAO,AAAC,CAAC;AAGR,WAAK,CAAG,sKACiF;AAKzF,eAAS,CAAG,EAAC,MAAK,CAAC;AAAA,IACrB,CAAC,EW7BgD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YXgCH,eAAc,GWhCY;EAAC,CAAC,CAAC,CAAC;AHDrD,AAAI,EAAA,SR8CJ,SAAM,OAAK,CAGG,EAAC,AAAW,CAAG;ASjD7B,OAAK,cAAc,ITiDD,UAAQ,CSjDY,CAAA;ATkDlC,GAAC,WAAW,MAAM,MAAM,EAAI,MAAI,CAAC;AACnC,AQnDsC,CAAA;AEAxC,AAAC,eAAc,YAAY,CAAC,AAAC,gBAAwD;ACArF,KAAK,eAAe,AAAC,uBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cX0CzB,UAAQ,AAAC,CAAC,CACT,QAAO,CAAG,QAAM,CAClB,CAAC,EW5CgD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YXgDR,SAAQ,GWhDuB;EAAC,CAAC,CAAC,CAAC;AHDrD,AAAI,EAAA,kBRuDJ,SAAM,gBAAc,CAEN,AAAD,CAAG;AACZ,KAAG,SAAS,EAAI,QAAM,CAAC;AACzB,AQ3DsC,CAAA;AEAxC,AAAC,eAAc,YAAY,CAAC,AAAC,yBAAwD;AV8D9E,OAAS,KAAG,CAAE,AAAD,CAAG;AAQrB,UAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;AACrB;AAAA","file":"/Users/crush/Documents/learning_js/angular/modules/examples/src/hello_world/index_common.js","sourceRoot":"/Users/crush/Documents/learning_js/angular/modules/examples/src/hello_world/","sourcesContent":["import {bootstrap, Component, Decorator, Template, NgElement} from 'angular2/angular2';\n\n// Angular 2.0 supports 3 basic types of directives:\n// - Component - the basic building blocks of Angular 2.0 apps. Backed by\n//   ShadowDom.(http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/)\n// - Decorator - add behavior to existing elements.\n// - Viewport - allow for stamping out of a html template (not in this demo).\n\n// @Component is AtScript syntax to annotate the HelloCmp class as an Angular\n// 2.0 component.\n@Component({\n  // The Selector prop tells Angular on which elements to instantiate this\n  // class. The syntax supported is a basic subset of CSS selectors, for example\n  // 'element', '[attr]', [attr=foo]', etc.\n  selector: 'hello-app',\n  // These are services that would be created if a class in the component's\n  // template tries to inject them.\n  componentServices: [GreetingService]\n})\n// The template for the component.\n@Template({\n  // Expressions in the template (like {{greeting}}) are evaluated in the\n  // context of the HelloCmp class below.\n  inline: `<div class=\"greeting\">{{greeting}} <span red>world</span>!</div>\n           <button class=\"changeButton\" (click)=\"changeGreeting()\">change greeting</button>`,\n  // All directives used in the template need to be specified. This allows for\n  // modularity (RedDec can only be used in this template)\n  // and better tooling (the template can be invalidated if the attribute is\n  // misspelled).\n  directives: [RedDec]\n})\nclass HelloCmp {\n  greeting: string;\n  constructor(service: GreetingService) {\n    this.greeting = service.greeting;\n  }\n  changeGreeting() {\n    this.greeting = 'howdy';\n  }\n}\n\n// Decorators are light-weight. They don't allow for templates, or new\n// expression contexts (use @Component or @Viewport for those needs).\n@Decorator({\n  selector: '[red]'\n})\nclass RedDec {\n  // NgElement is always injectable and it wraps the element on which the\n  // directive was found by the compiler.\n  constructor(el: NgElement) {\n    el.domElement.style.color = 'red';\n  }\n}\n\n// A service used by the HelloCmp component.\nclass GreetingService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nexport function main() {\n  // Bootstrapping only requires specifying a root component.\n  // The boundary between the Angular application and the rest of the page is\n  // the shadowDom of this root component.\n  // The selector of the component passed in is used to find where to insert the\n  // application.\n  // You can use the light dom of the <hello-app> tag as temporary content (for\n  // example 'Loading...') before the application is ready.\n  bootstrap(HelloCmp);\n}\n","Object.defineProperties(module.exports, $__placeholder__0);","{get: $__placeholder__0}","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true","{value: $__placeholder__0}","var __moduleName = $__placeholder__0;","($__placeholder__0 = require($__placeholder__1),\n        $__placeholder__2 && $__placeholder__3.__esModule && $__placeholder__4 || {default: $__placeholder__5})","var $__placeholder__0 = $__placeholder__1","assert.argumentTypes($__placeholder__0)","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}